/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the TenantZoneDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantZoneDTO{}

// TenantZoneDTO struct for TenantZoneDTO
type TenantZoneDTO struct {
	Name *string `json:"name,omitempty"`
	ReplicaType *string `json:"replicaType,omitempty"`
	Region *string `json:"region,omitempty"`
	Role *string `json:"role,omitempty"`
}

// NewTenantZoneDTO instantiates a new TenantZoneDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantZoneDTO() *TenantZoneDTO {
	this := TenantZoneDTO{}
	return &this
}

// NewTenantZoneDTOWithDefaults instantiates a new TenantZoneDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantZoneDTOWithDefaults() *TenantZoneDTO {
	this := TenantZoneDTO{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TenantZoneDTO) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantZoneDTO) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TenantZoneDTO) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TenantZoneDTO) SetName(v string) {
	o.Name = &v
}

// GetReplicaType returns the ReplicaType field value if set, zero value otherwise.
func (o *TenantZoneDTO) GetReplicaType() string {
	if o == nil || IsNil(o.ReplicaType) {
		var ret string
		return ret
	}
	return *o.ReplicaType
}

// GetReplicaTypeOk returns a tuple with the ReplicaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantZoneDTO) GetReplicaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicaType) {
		return nil, false
	}
	return o.ReplicaType, true
}

// HasReplicaType returns a boolean if a field has been set.
func (o *TenantZoneDTO) HasReplicaType() bool {
	if o != nil && !IsNil(o.ReplicaType) {
		return true
	}

	return false
}

// SetReplicaType gets a reference to the given string and assigns it to the ReplicaType field.
func (o *TenantZoneDTO) SetReplicaType(v string) {
	o.ReplicaType = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *TenantZoneDTO) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantZoneDTO) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *TenantZoneDTO) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *TenantZoneDTO) SetRegion(v string) {
	o.Region = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *TenantZoneDTO) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantZoneDTO) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *TenantZoneDTO) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *TenantZoneDTO) SetRole(v string) {
	o.Role = &v
}

func (o TenantZoneDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantZoneDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ReplicaType) {
		toSerialize["replicaType"] = o.ReplicaType
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	return toSerialize, nil
}

type NullableTenantZoneDTO struct {
	value *TenantZoneDTO
	isSet bool
}

func (v NullableTenantZoneDTO) Get() *TenantZoneDTO {
	return v.value
}

func (v *NullableTenantZoneDTO) Set(val *TenantZoneDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantZoneDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantZoneDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantZoneDTO(val *TenantZoneDTO) *NullableTenantZoneDTO {
	return &NullableTenantZoneDTO{value: val, isSet: true}
}

func (v NullableTenantZoneDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantZoneDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


