/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the TagKeyValueDo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagKeyValueDo{}

// TagKeyValueDo struct for TagKeyValueDo
type TagKeyValueDo struct {
	TagKey *string `json:"tagKey,omitempty"`
	TagValue *string `json:"tagValue,omitempty"`
}

// NewTagKeyValueDo instantiates a new TagKeyValueDo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagKeyValueDo() *TagKeyValueDo {
	this := TagKeyValueDo{}
	return &this
}

// NewTagKeyValueDoWithDefaults instantiates a new TagKeyValueDo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagKeyValueDoWithDefaults() *TagKeyValueDo {
	this := TagKeyValueDo{}
	return &this
}

// GetTagKey returns the TagKey field value if set, zero value otherwise.
func (o *TagKeyValueDo) GetTagKey() string {
	if o == nil || IsNil(o.TagKey) {
		var ret string
		return ret
	}
	return *o.TagKey
}

// GetTagKeyOk returns a tuple with the TagKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagKeyValueDo) GetTagKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TagKey) {
		return nil, false
	}
	return o.TagKey, true
}

// HasTagKey returns a boolean if a field has been set.
func (o *TagKeyValueDo) HasTagKey() bool {
	if o != nil && !IsNil(o.TagKey) {
		return true
	}

	return false
}

// SetTagKey gets a reference to the given string and assigns it to the TagKey field.
func (o *TagKeyValueDo) SetTagKey(v string) {
	o.TagKey = &v
}

// GetTagValue returns the TagValue field value if set, zero value otherwise.
func (o *TagKeyValueDo) GetTagValue() string {
	if o == nil || IsNil(o.TagValue) {
		var ret string
		return ret
	}
	return *o.TagValue
}

// GetTagValueOk returns a tuple with the TagValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagKeyValueDo) GetTagValueOk() (*string, bool) {
	if o == nil || IsNil(o.TagValue) {
		return nil, false
	}
	return o.TagValue, true
}

// HasTagValue returns a boolean if a field has been set.
func (o *TagKeyValueDo) HasTagValue() bool {
	if o != nil && !IsNil(o.TagValue) {
		return true
	}

	return false
}

// SetTagValue gets a reference to the given string and assigns it to the TagValue field.
func (o *TagKeyValueDo) SetTagValue(v string) {
	o.TagValue = &v
}

func (o TagKeyValueDo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagKeyValueDo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TagKey) {
		toSerialize["tagKey"] = o.TagKey
	}
	if !IsNil(o.TagValue) {
		toSerialize["tagValue"] = o.TagValue
	}
	return toSerialize, nil
}

type NullableTagKeyValueDo struct {
	value *TagKeyValueDo
	isSet bool
}

func (v NullableTagKeyValueDo) Get() *TagKeyValueDo {
	return v.value
}

func (v *NullableTagKeyValueDo) Set(val *TagKeyValueDo) {
	v.value = val
	v.isSet = true
}

func (v NullableTagKeyValueDo) IsSet() bool {
	return v.isSet
}

func (v *NullableTagKeyValueDo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagKeyValueDo(val *TagKeyValueDo) *NullableTagKeyValueDo {
	return &NullableTagKeyValueDo{value: val, isSet: true}
}

func (v NullableTagKeyValueDo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagKeyValueDo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


