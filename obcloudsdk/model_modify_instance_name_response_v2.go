/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the ModifyInstanceNameResponseV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModifyInstanceNameResponseV2{}

// ModifyInstanceNameResponseV2 struct for ModifyInstanceNameResponseV2
type ModifyInstanceNameResponseV2 struct {
	InstanceName *string `json:"instanceName,omitempty"`
}

// NewModifyInstanceNameResponseV2 instantiates a new ModifyInstanceNameResponseV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyInstanceNameResponseV2() *ModifyInstanceNameResponseV2 {
	this := ModifyInstanceNameResponseV2{}
	return &this
}

// NewModifyInstanceNameResponseV2WithDefaults instantiates a new ModifyInstanceNameResponseV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyInstanceNameResponseV2WithDefaults() *ModifyInstanceNameResponseV2 {
	this := ModifyInstanceNameResponseV2{}
	return &this
}

// GetInstanceName returns the InstanceName field value if set, zero value otherwise.
func (o *ModifyInstanceNameResponseV2) GetInstanceName() string {
	if o == nil || IsNil(o.InstanceName) {
		var ret string
		return ret
	}
	return *o.InstanceName
}

// GetInstanceNameOk returns a tuple with the InstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyInstanceNameResponseV2) GetInstanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceName) {
		return nil, false
	}
	return o.InstanceName, true
}

// HasInstanceName returns a boolean if a field has been set.
func (o *ModifyInstanceNameResponseV2) HasInstanceName() bool {
	if o != nil && !IsNil(o.InstanceName) {
		return true
	}

	return false
}

// SetInstanceName gets a reference to the given string and assigns it to the InstanceName field.
func (o *ModifyInstanceNameResponseV2) SetInstanceName(v string) {
	o.InstanceName = &v
}

func (o ModifyInstanceNameResponseV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyInstanceNameResponseV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceName) {
		toSerialize["instanceName"] = o.InstanceName
	}
	return toSerialize, nil
}

type NullableModifyInstanceNameResponseV2 struct {
	value *ModifyInstanceNameResponseV2
	isSet bool
}

func (v NullableModifyInstanceNameResponseV2) Get() *ModifyInstanceNameResponseV2 {
	return v.value
}

func (v *NullableModifyInstanceNameResponseV2) Set(val *ModifyInstanceNameResponseV2) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyInstanceNameResponseV2) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyInstanceNameResponseV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyInstanceNameResponseV2(val *ModifyInstanceNameResponseV2) *NullableModifyInstanceNameResponseV2 {
	return &NullableModifyInstanceNameResponseV2{value: val, isSet: true}
}

func (v NullableModifyInstanceNameResponseV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyInstanceNameResponseV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


