/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the TenantResourceDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantResourceDTO{}

// TenantResourceDTO struct for TenantResourceDTO
type TenantResourceDTO struct {
	Cpu *TenantCpuDTO `json:"cpu,omitempty"`
	Memory *TenantMemoryDTO `json:"memory,omitempty"`
	Disk *TenantDiskDTO `json:"disk,omitempty"`
	UnitNum *int32 `json:"unitNum,omitempty"`
}

// NewTenantResourceDTO instantiates a new TenantResourceDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantResourceDTO() *TenantResourceDTO {
	this := TenantResourceDTO{}
	return &this
}

// NewTenantResourceDTOWithDefaults instantiates a new TenantResourceDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantResourceDTOWithDefaults() *TenantResourceDTO {
	this := TenantResourceDTO{}
	return &this
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *TenantResourceDTO) GetCpu() TenantCpuDTO {
	if o == nil || IsNil(o.Cpu) {
		var ret TenantCpuDTO
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantResourceDTO) GetCpuOk() (*TenantCpuDTO, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *TenantResourceDTO) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given TenantCpuDTO and assigns it to the Cpu field.
func (o *TenantResourceDTO) SetCpu(v TenantCpuDTO) {
	o.Cpu = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *TenantResourceDTO) GetMemory() TenantMemoryDTO {
	if o == nil || IsNil(o.Memory) {
		var ret TenantMemoryDTO
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantResourceDTO) GetMemoryOk() (*TenantMemoryDTO, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *TenantResourceDTO) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given TenantMemoryDTO and assigns it to the Memory field.
func (o *TenantResourceDTO) SetMemory(v TenantMemoryDTO) {
	o.Memory = &v
}

// GetDisk returns the Disk field value if set, zero value otherwise.
func (o *TenantResourceDTO) GetDisk() TenantDiskDTO {
	if o == nil || IsNil(o.Disk) {
		var ret TenantDiskDTO
		return ret
	}
	return *o.Disk
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantResourceDTO) GetDiskOk() (*TenantDiskDTO, bool) {
	if o == nil || IsNil(o.Disk) {
		return nil, false
	}
	return o.Disk, true
}

// HasDisk returns a boolean if a field has been set.
func (o *TenantResourceDTO) HasDisk() bool {
	if o != nil && !IsNil(o.Disk) {
		return true
	}

	return false
}

// SetDisk gets a reference to the given TenantDiskDTO and assigns it to the Disk field.
func (o *TenantResourceDTO) SetDisk(v TenantDiskDTO) {
	o.Disk = &v
}

// GetUnitNum returns the UnitNum field value if set, zero value otherwise.
func (o *TenantResourceDTO) GetUnitNum() int32 {
	if o == nil || IsNil(o.UnitNum) {
		var ret int32
		return ret
	}
	return *o.UnitNum
}

// GetUnitNumOk returns a tuple with the UnitNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantResourceDTO) GetUnitNumOk() (*int32, bool) {
	if o == nil || IsNil(o.UnitNum) {
		return nil, false
	}
	return o.UnitNum, true
}

// HasUnitNum returns a boolean if a field has been set.
func (o *TenantResourceDTO) HasUnitNum() bool {
	if o != nil && !IsNil(o.UnitNum) {
		return true
	}

	return false
}

// SetUnitNum gets a reference to the given int32 and assigns it to the UnitNum field.
func (o *TenantResourceDTO) SetUnitNum(v int32) {
	o.UnitNum = &v
}

func (o TenantResourceDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantResourceDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.Disk) {
		toSerialize["disk"] = o.Disk
	}
	if !IsNil(o.UnitNum) {
		toSerialize["unitNum"] = o.UnitNum
	}
	return toSerialize, nil
}

type NullableTenantResourceDTO struct {
	value *TenantResourceDTO
	isSet bool
}

func (v NullableTenantResourceDTO) Get() *TenantResourceDTO {
	return v.value
}

func (v *NullableTenantResourceDTO) Set(val *TenantResourceDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantResourceDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantResourceDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantResourceDTO(val *TenantResourceDTO) *NullableTenantResourceDTO {
	return &NullableTenantResourceDTO{value: val, isSet: true}
}

func (v NullableTenantResourceDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantResourceDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


