/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MultiCloudCreateInstanceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiCloudCreateInstanceRequest{}

// MultiCloudCreateInstanceRequest struct for MultiCloudCreateInstanceRequest
type MultiCloudCreateInstanceRequest struct {
	ChargeType *string `json:"chargeType,omitempty"`
	InstanceName *string `json:"instanceName,omitempty"`
	CloudProvider string `json:"cloudProvider"`
	DiskSize int32 `json:"diskSize"`
	Region string `json:"region"`
	ObVersion string `json:"obVersion"`
	Zones string `json:"zones"`
	InstanceClass string `json:"instanceClass"`
	ReplicaMode *string `json:"replicaMode,omitempty"`
	DryRun *bool `json:"dryRun,omitempty"`
	SaleChannel *string `json:"saleChannel,omitempty"`
	InstanceType *string `json:"instanceType,omitempty"`
}

type _MultiCloudCreateInstanceRequest MultiCloudCreateInstanceRequest

// NewMultiCloudCreateInstanceRequest instantiates a new MultiCloudCreateInstanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiCloudCreateInstanceRequest(cloudProvider string, diskSize int32, region string, obVersion string, zones string, instanceClass string) *MultiCloudCreateInstanceRequest {
	this := MultiCloudCreateInstanceRequest{}
	this.CloudProvider = cloudProvider
	this.DiskSize = diskSize
	this.Region = region
	this.ObVersion = obVersion
	this.Zones = zones
	this.InstanceClass = instanceClass
	return &this
}

// NewMultiCloudCreateInstanceRequestWithDefaults instantiates a new MultiCloudCreateInstanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiCloudCreateInstanceRequestWithDefaults() *MultiCloudCreateInstanceRequest {
	this := MultiCloudCreateInstanceRequest{}
	return &this
}

// GetChargeType returns the ChargeType field value if set, zero value otherwise.
func (o *MultiCloudCreateInstanceRequest) GetChargeType() string {
	if o == nil || IsNil(o.ChargeType) {
		var ret string
		return ret
	}
	return *o.ChargeType
}

// GetChargeTypeOk returns a tuple with the ChargeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudCreateInstanceRequest) GetChargeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ChargeType) {
		return nil, false
	}
	return o.ChargeType, true
}

// HasChargeType returns a boolean if a field has been set.
func (o *MultiCloudCreateInstanceRequest) HasChargeType() bool {
	if o != nil && !IsNil(o.ChargeType) {
		return true
	}

	return false
}

// SetChargeType gets a reference to the given string and assigns it to the ChargeType field.
func (o *MultiCloudCreateInstanceRequest) SetChargeType(v string) {
	o.ChargeType = &v
}

// GetInstanceName returns the InstanceName field value if set, zero value otherwise.
func (o *MultiCloudCreateInstanceRequest) GetInstanceName() string {
	if o == nil || IsNil(o.InstanceName) {
		var ret string
		return ret
	}
	return *o.InstanceName
}

// GetInstanceNameOk returns a tuple with the InstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudCreateInstanceRequest) GetInstanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceName) {
		return nil, false
	}
	return o.InstanceName, true
}

// HasInstanceName returns a boolean if a field has been set.
func (o *MultiCloudCreateInstanceRequest) HasInstanceName() bool {
	if o != nil && !IsNil(o.InstanceName) {
		return true
	}

	return false
}

// SetInstanceName gets a reference to the given string and assigns it to the InstanceName field.
func (o *MultiCloudCreateInstanceRequest) SetInstanceName(v string) {
	o.InstanceName = &v
}

// GetCloudProvider returns the CloudProvider field value
func (o *MultiCloudCreateInstanceRequest) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *MultiCloudCreateInstanceRequest) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *MultiCloudCreateInstanceRequest) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetDiskSize returns the DiskSize field value
func (o *MultiCloudCreateInstanceRequest) GetDiskSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DiskSize
}

// GetDiskSizeOk returns a tuple with the DiskSize field value
// and a boolean to check if the value has been set.
func (o *MultiCloudCreateInstanceRequest) GetDiskSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiskSize, true
}

// SetDiskSize sets field value
func (o *MultiCloudCreateInstanceRequest) SetDiskSize(v int32) {
	o.DiskSize = v
}

// GetRegion returns the Region field value
func (o *MultiCloudCreateInstanceRequest) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *MultiCloudCreateInstanceRequest) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *MultiCloudCreateInstanceRequest) SetRegion(v string) {
	o.Region = v
}

// GetObVersion returns the ObVersion field value
func (o *MultiCloudCreateInstanceRequest) GetObVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObVersion
}

// GetObVersionOk returns a tuple with the ObVersion field value
// and a boolean to check if the value has been set.
func (o *MultiCloudCreateInstanceRequest) GetObVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObVersion, true
}

// SetObVersion sets field value
func (o *MultiCloudCreateInstanceRequest) SetObVersion(v string) {
	o.ObVersion = v
}

// GetZones returns the Zones field value
func (o *MultiCloudCreateInstanceRequest) GetZones() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Zones
}

// GetZonesOk returns a tuple with the Zones field value
// and a boolean to check if the value has been set.
func (o *MultiCloudCreateInstanceRequest) GetZonesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Zones, true
}

// SetZones sets field value
func (o *MultiCloudCreateInstanceRequest) SetZones(v string) {
	o.Zones = v
}

// GetInstanceClass returns the InstanceClass field value
func (o *MultiCloudCreateInstanceRequest) GetInstanceClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceClass
}

// GetInstanceClassOk returns a tuple with the InstanceClass field value
// and a boolean to check if the value has been set.
func (o *MultiCloudCreateInstanceRequest) GetInstanceClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceClass, true
}

// SetInstanceClass sets field value
func (o *MultiCloudCreateInstanceRequest) SetInstanceClass(v string) {
	o.InstanceClass = v
}

// GetReplicaMode returns the ReplicaMode field value if set, zero value otherwise.
func (o *MultiCloudCreateInstanceRequest) GetReplicaMode() string {
	if o == nil || IsNil(o.ReplicaMode) {
		var ret string
		return ret
	}
	return *o.ReplicaMode
}

// GetReplicaModeOk returns a tuple with the ReplicaMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudCreateInstanceRequest) GetReplicaModeOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicaMode) {
		return nil, false
	}
	return o.ReplicaMode, true
}

// HasReplicaMode returns a boolean if a field has been set.
func (o *MultiCloudCreateInstanceRequest) HasReplicaMode() bool {
	if o != nil && !IsNil(o.ReplicaMode) {
		return true
	}

	return false
}

// SetReplicaMode gets a reference to the given string and assigns it to the ReplicaMode field.
func (o *MultiCloudCreateInstanceRequest) SetReplicaMode(v string) {
	o.ReplicaMode = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *MultiCloudCreateInstanceRequest) GetDryRun() bool {
	if o == nil || IsNil(o.DryRun) {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudCreateInstanceRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || IsNil(o.DryRun) {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *MultiCloudCreateInstanceRequest) HasDryRun() bool {
	if o != nil && !IsNil(o.DryRun) {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *MultiCloudCreateInstanceRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetSaleChannel returns the SaleChannel field value if set, zero value otherwise.
func (o *MultiCloudCreateInstanceRequest) GetSaleChannel() string {
	if o == nil || IsNil(o.SaleChannel) {
		var ret string
		return ret
	}
	return *o.SaleChannel
}

// GetSaleChannelOk returns a tuple with the SaleChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudCreateInstanceRequest) GetSaleChannelOk() (*string, bool) {
	if o == nil || IsNil(o.SaleChannel) {
		return nil, false
	}
	return o.SaleChannel, true
}

// HasSaleChannel returns a boolean if a field has been set.
func (o *MultiCloudCreateInstanceRequest) HasSaleChannel() bool {
	if o != nil && !IsNil(o.SaleChannel) {
		return true
	}

	return false
}

// SetSaleChannel gets a reference to the given string and assigns it to the SaleChannel field.
func (o *MultiCloudCreateInstanceRequest) SetSaleChannel(v string) {
	o.SaleChannel = &v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *MultiCloudCreateInstanceRequest) GetInstanceType() string {
	if o == nil || IsNil(o.InstanceType) {
		var ret string
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudCreateInstanceRequest) GetInstanceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceType) {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *MultiCloudCreateInstanceRequest) HasInstanceType() bool {
	if o != nil && !IsNil(o.InstanceType) {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given string and assigns it to the InstanceType field.
func (o *MultiCloudCreateInstanceRequest) SetInstanceType(v string) {
	o.InstanceType = &v
}

func (o MultiCloudCreateInstanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiCloudCreateInstanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChargeType) {
		toSerialize["chargeType"] = o.ChargeType
	}
	if !IsNil(o.InstanceName) {
		toSerialize["instanceName"] = o.InstanceName
	}
	toSerialize["cloudProvider"] = o.CloudProvider
	toSerialize["diskSize"] = o.DiskSize
	toSerialize["region"] = o.Region
	toSerialize["obVersion"] = o.ObVersion
	toSerialize["zones"] = o.Zones
	toSerialize["instanceClass"] = o.InstanceClass
	if !IsNil(o.ReplicaMode) {
		toSerialize["replicaMode"] = o.ReplicaMode
	}
	if !IsNil(o.DryRun) {
		toSerialize["dryRun"] = o.DryRun
	}
	if !IsNil(o.SaleChannel) {
		toSerialize["saleChannel"] = o.SaleChannel
	}
	if !IsNil(o.InstanceType) {
		toSerialize["instanceType"] = o.InstanceType
	}
	return toSerialize, nil
}

func (o *MultiCloudCreateInstanceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloudProvider",
		"diskSize",
		"region",
		"obVersion",
		"zones",
		"instanceClass",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMultiCloudCreateInstanceRequest := _MultiCloudCreateInstanceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMultiCloudCreateInstanceRequest)

	if err != nil {
		return err
	}

	*o = MultiCloudCreateInstanceRequest(varMultiCloudCreateInstanceRequest)

	return err
}

type NullableMultiCloudCreateInstanceRequest struct {
	value *MultiCloudCreateInstanceRequest
	isSet bool
}

func (v NullableMultiCloudCreateInstanceRequest) Get() *MultiCloudCreateInstanceRequest {
	return v.value
}

func (v *NullableMultiCloudCreateInstanceRequest) Set(val *MultiCloudCreateInstanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiCloudCreateInstanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiCloudCreateInstanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiCloudCreateInstanceRequest(val *MultiCloudCreateInstanceRequest) *NullableMultiCloudCreateInstanceRequest {
	return &NullableMultiCloudCreateInstanceRequest{value: val, isSet: true}
}

func (v NullableMultiCloudCreateInstanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiCloudCreateInstanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


