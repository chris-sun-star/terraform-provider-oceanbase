/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the CreateReadonlyConnectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateReadonlyConnectionRequest{}

// CreateReadonlyConnectionRequest struct for CreateReadonlyConnectionRequest
type CreateReadonlyConnectionRequest struct {
	ZoneIdList []string `json:"zoneIdList,omitempty"`
	UserAccount *string `json:"userAccount,omitempty"`
}

// NewCreateReadonlyConnectionRequest instantiates a new CreateReadonlyConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateReadonlyConnectionRequest() *CreateReadonlyConnectionRequest {
	this := CreateReadonlyConnectionRequest{}
	return &this
}

// NewCreateReadonlyConnectionRequestWithDefaults instantiates a new CreateReadonlyConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateReadonlyConnectionRequestWithDefaults() *CreateReadonlyConnectionRequest {
	this := CreateReadonlyConnectionRequest{}
	return &this
}

// GetZoneIdList returns the ZoneIdList field value if set, zero value otherwise.
func (o *CreateReadonlyConnectionRequest) GetZoneIdList() []string {
	if o == nil || IsNil(o.ZoneIdList) {
		var ret []string
		return ret
	}
	return o.ZoneIdList
}

// GetZoneIdListOk returns a tuple with the ZoneIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReadonlyConnectionRequest) GetZoneIdListOk() ([]string, bool) {
	if o == nil || IsNil(o.ZoneIdList) {
		return nil, false
	}
	return o.ZoneIdList, true
}

// HasZoneIdList returns a boolean if a field has been set.
func (o *CreateReadonlyConnectionRequest) HasZoneIdList() bool {
	if o != nil && !IsNil(o.ZoneIdList) {
		return true
	}

	return false
}

// SetZoneIdList gets a reference to the given []string and assigns it to the ZoneIdList field.
func (o *CreateReadonlyConnectionRequest) SetZoneIdList(v []string) {
	o.ZoneIdList = v
}

// GetUserAccount returns the UserAccount field value if set, zero value otherwise.
func (o *CreateReadonlyConnectionRequest) GetUserAccount() string {
	if o == nil || IsNil(o.UserAccount) {
		var ret string
		return ret
	}
	return *o.UserAccount
}

// GetUserAccountOk returns a tuple with the UserAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReadonlyConnectionRequest) GetUserAccountOk() (*string, bool) {
	if o == nil || IsNil(o.UserAccount) {
		return nil, false
	}
	return o.UserAccount, true
}

// HasUserAccount returns a boolean if a field has been set.
func (o *CreateReadonlyConnectionRequest) HasUserAccount() bool {
	if o != nil && !IsNil(o.UserAccount) {
		return true
	}

	return false
}

// SetUserAccount gets a reference to the given string and assigns it to the UserAccount field.
func (o *CreateReadonlyConnectionRequest) SetUserAccount(v string) {
	o.UserAccount = &v
}

func (o CreateReadonlyConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateReadonlyConnectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ZoneIdList) {
		toSerialize["zoneIdList"] = o.ZoneIdList
	}
	if !IsNil(o.UserAccount) {
		toSerialize["userAccount"] = o.UserAccount
	}
	return toSerialize, nil
}

type NullableCreateReadonlyConnectionRequest struct {
	value *CreateReadonlyConnectionRequest
	isSet bool
}

func (v NullableCreateReadonlyConnectionRequest) Get() *CreateReadonlyConnectionRequest {
	return v.value
}

func (v *NullableCreateReadonlyConnectionRequest) Set(val *CreateReadonlyConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateReadonlyConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateReadonlyConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateReadonlyConnectionRequest(val *CreateReadonlyConnectionRequest) *NullableCreateReadonlyConnectionRequest {
	return &NullableCreateReadonlyConnectionRequest{value: val, isSet: true}
}

func (v NullableCreateReadonlyConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateReadonlyConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


