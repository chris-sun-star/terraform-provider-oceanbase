/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the CreateTenantResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTenantResponse{}

// CreateTenantResponse struct for CreateTenantResponse
type CreateTenantResponse struct {
	TenantId *string `json:"tenantId,omitempty"`
	Extra map[string]map[string]interface{} `json:"extra,omitempty"`
}

// NewCreateTenantResponse instantiates a new CreateTenantResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTenantResponse() *CreateTenantResponse {
	this := CreateTenantResponse{}
	return &this
}

// NewCreateTenantResponseWithDefaults instantiates a new CreateTenantResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTenantResponseWithDefaults() *CreateTenantResponse {
	this := CreateTenantResponse{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *CreateTenantResponse) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTenantResponse) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *CreateTenantResponse) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *CreateTenantResponse) SetTenantId(v string) {
	o.TenantId = &v
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *CreateTenantResponse) GetExtra() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Extra) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTenantResponse) GetExtraOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Extra) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *CreateTenantResponse) HasExtra() bool {
	if o != nil && !IsNil(o.Extra) {
		return true
	}

	return false
}

// SetExtra gets a reference to the given map[string]map[string]interface{} and assigns it to the Extra field.
func (o *CreateTenantResponse) SetExtra(v map[string]map[string]interface{}) {
	o.Extra = v
}

func (o CreateTenantResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTenantResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.Extra) {
		toSerialize["extra"] = o.Extra
	}
	return toSerialize, nil
}

type NullableCreateTenantResponse struct {
	value *CreateTenantResponse
	isSet bool
}

func (v NullableCreateTenantResponse) Get() *CreateTenantResponse {
	return v.value
}

func (v *NullableCreateTenantResponse) Set(val *CreateTenantResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTenantResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTenantResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTenantResponse(val *CreateTenantResponse) *NullableCreateTenantResponse {
	return &NullableCreateTenantResponse{value: val, isSet: true}
}

func (v NullableCreateTenantResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTenantResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


