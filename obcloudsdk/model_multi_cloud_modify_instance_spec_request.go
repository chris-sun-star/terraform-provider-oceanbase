/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the MultiCloudModifyInstanceSpecRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiCloudModifyInstanceSpecRequest{}

// MultiCloudModifyInstanceSpecRequest struct for MultiCloudModifyInstanceSpecRequest
type MultiCloudModifyInstanceSpecRequest struct {
	InstanceClass *string `json:"instanceClass,omitempty"`
	DiskSize *int32 `json:"diskSize,omitempty"`
	DryRun *bool `json:"dryRun,omitempty"`
}

// NewMultiCloudModifyInstanceSpecRequest instantiates a new MultiCloudModifyInstanceSpecRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiCloudModifyInstanceSpecRequest() *MultiCloudModifyInstanceSpecRequest {
	this := MultiCloudModifyInstanceSpecRequest{}
	return &this
}

// NewMultiCloudModifyInstanceSpecRequestWithDefaults instantiates a new MultiCloudModifyInstanceSpecRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiCloudModifyInstanceSpecRequestWithDefaults() *MultiCloudModifyInstanceSpecRequest {
	this := MultiCloudModifyInstanceSpecRequest{}
	return &this
}

// GetInstanceClass returns the InstanceClass field value if set, zero value otherwise.
func (o *MultiCloudModifyInstanceSpecRequest) GetInstanceClass() string {
	if o == nil || IsNil(o.InstanceClass) {
		var ret string
		return ret
	}
	return *o.InstanceClass
}

// GetInstanceClassOk returns a tuple with the InstanceClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudModifyInstanceSpecRequest) GetInstanceClassOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceClass) {
		return nil, false
	}
	return o.InstanceClass, true
}

// HasInstanceClass returns a boolean if a field has been set.
func (o *MultiCloudModifyInstanceSpecRequest) HasInstanceClass() bool {
	if o != nil && !IsNil(o.InstanceClass) {
		return true
	}

	return false
}

// SetInstanceClass gets a reference to the given string and assigns it to the InstanceClass field.
func (o *MultiCloudModifyInstanceSpecRequest) SetInstanceClass(v string) {
	o.InstanceClass = &v
}

// GetDiskSize returns the DiskSize field value if set, zero value otherwise.
func (o *MultiCloudModifyInstanceSpecRequest) GetDiskSize() int32 {
	if o == nil || IsNil(o.DiskSize) {
		var ret int32
		return ret
	}
	return *o.DiskSize
}

// GetDiskSizeOk returns a tuple with the DiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudModifyInstanceSpecRequest) GetDiskSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.DiskSize) {
		return nil, false
	}
	return o.DiskSize, true
}

// HasDiskSize returns a boolean if a field has been set.
func (o *MultiCloudModifyInstanceSpecRequest) HasDiskSize() bool {
	if o != nil && !IsNil(o.DiskSize) {
		return true
	}

	return false
}

// SetDiskSize gets a reference to the given int32 and assigns it to the DiskSize field.
func (o *MultiCloudModifyInstanceSpecRequest) SetDiskSize(v int32) {
	o.DiskSize = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *MultiCloudModifyInstanceSpecRequest) GetDryRun() bool {
	if o == nil || IsNil(o.DryRun) {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudModifyInstanceSpecRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || IsNil(o.DryRun) {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *MultiCloudModifyInstanceSpecRequest) HasDryRun() bool {
	if o != nil && !IsNil(o.DryRun) {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *MultiCloudModifyInstanceSpecRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

func (o MultiCloudModifyInstanceSpecRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiCloudModifyInstanceSpecRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceClass) {
		toSerialize["instanceClass"] = o.InstanceClass
	}
	if !IsNil(o.DiskSize) {
		toSerialize["diskSize"] = o.DiskSize
	}
	if !IsNil(o.DryRun) {
		toSerialize["dryRun"] = o.DryRun
	}
	return toSerialize, nil
}

type NullableMultiCloudModifyInstanceSpecRequest struct {
	value *MultiCloudModifyInstanceSpecRequest
	isSet bool
}

func (v NullableMultiCloudModifyInstanceSpecRequest) Get() *MultiCloudModifyInstanceSpecRequest {
	return v.value
}

func (v *NullableMultiCloudModifyInstanceSpecRequest) Set(val *MultiCloudModifyInstanceSpecRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiCloudModifyInstanceSpecRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiCloudModifyInstanceSpecRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiCloudModifyInstanceSpecRequest(val *MultiCloudModifyInstanceSpecRequest) *NullableMultiCloudModifyInstanceSpecRequest {
	return &NullableMultiCloudModifyInstanceSpecRequest{value: val, isSet: true}
}

func (v NullableMultiCloudModifyInstanceSpecRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiCloudModifyInstanceSpecRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


