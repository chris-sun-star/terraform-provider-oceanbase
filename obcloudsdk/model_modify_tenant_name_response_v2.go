/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the ModifyTenantNameResponseV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModifyTenantNameResponseV2{}

// ModifyTenantNameResponseV2 struct for ModifyTenantNameResponseV2
type ModifyTenantNameResponseV2 struct {
	RequestId *string `json:"requestId,omitempty"`
	InstanceId *string `json:"instanceId,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
	TenantName *string `json:"tenantName,omitempty"`
}

// NewModifyTenantNameResponseV2 instantiates a new ModifyTenantNameResponseV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyTenantNameResponseV2() *ModifyTenantNameResponseV2 {
	this := ModifyTenantNameResponseV2{}
	return &this
}

// NewModifyTenantNameResponseV2WithDefaults instantiates a new ModifyTenantNameResponseV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyTenantNameResponseV2WithDefaults() *ModifyTenantNameResponseV2 {
	this := ModifyTenantNameResponseV2{}
	return &this
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *ModifyTenantNameResponseV2) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyTenantNameResponseV2) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *ModifyTenantNameResponseV2) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *ModifyTenantNameResponseV2) SetRequestId(v string) {
	o.RequestId = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *ModifyTenantNameResponseV2) GetInstanceId() string {
	if o == nil || IsNil(o.InstanceId) {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyTenantNameResponseV2) GetInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *ModifyTenantNameResponseV2) HasInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *ModifyTenantNameResponseV2) SetInstanceId(v string) {
	o.InstanceId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ModifyTenantNameResponseV2) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyTenantNameResponseV2) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ModifyTenantNameResponseV2) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ModifyTenantNameResponseV2) SetTenantId(v string) {
	o.TenantId = &v
}

// GetTenantName returns the TenantName field value if set, zero value otherwise.
func (o *ModifyTenantNameResponseV2) GetTenantName() string {
	if o == nil || IsNil(o.TenantName) {
		var ret string
		return ret
	}
	return *o.TenantName
}

// GetTenantNameOk returns a tuple with the TenantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyTenantNameResponseV2) GetTenantNameOk() (*string, bool) {
	if o == nil || IsNil(o.TenantName) {
		return nil, false
	}
	return o.TenantName, true
}

// HasTenantName returns a boolean if a field has been set.
func (o *ModifyTenantNameResponseV2) HasTenantName() bool {
	if o != nil && !IsNil(o.TenantName) {
		return true
	}

	return false
}

// SetTenantName gets a reference to the given string and assigns it to the TenantName field.
func (o *ModifyTenantNameResponseV2) SetTenantName(v string) {
	o.TenantName = &v
}

func (o ModifyTenantNameResponseV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyTenantNameResponseV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	if !IsNil(o.InstanceId) {
		toSerialize["instanceId"] = o.InstanceId
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.TenantName) {
		toSerialize["tenantName"] = o.TenantName
	}
	return toSerialize, nil
}

type NullableModifyTenantNameResponseV2 struct {
	value *ModifyTenantNameResponseV2
	isSet bool
}

func (v NullableModifyTenantNameResponseV2) Get() *ModifyTenantNameResponseV2 {
	return v.value
}

func (v *NullableModifyTenantNameResponseV2) Set(val *ModifyTenantNameResponseV2) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyTenantNameResponseV2) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyTenantNameResponseV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyTenantNameResponseV2(val *ModifyTenantNameResponseV2) *NullableModifyTenantNameResponseV2 {
	return &NullableModifyTenantNameResponseV2{value: val, isSet: true}
}

func (v NullableModifyTenantNameResponseV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyTenantNameResponseV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


