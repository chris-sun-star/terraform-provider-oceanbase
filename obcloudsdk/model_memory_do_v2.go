/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the MemoryDoV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemoryDoV2{}

// MemoryDoV2 struct for MemoryDoV2
type MemoryDoV2 struct {
	TotalMemory *float64 `json:"totalMemory,omitempty"`
	UsedMemory *float64 `json:"usedMemory,omitempty"`
}

// NewMemoryDoV2 instantiates a new MemoryDoV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemoryDoV2() *MemoryDoV2 {
	this := MemoryDoV2{}
	return &this
}

// NewMemoryDoV2WithDefaults instantiates a new MemoryDoV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemoryDoV2WithDefaults() *MemoryDoV2 {
	this := MemoryDoV2{}
	return &this
}

// GetTotalMemory returns the TotalMemory field value if set, zero value otherwise.
func (o *MemoryDoV2) GetTotalMemory() float64 {
	if o == nil || IsNil(o.TotalMemory) {
		var ret float64
		return ret
	}
	return *o.TotalMemory
}

// GetTotalMemoryOk returns a tuple with the TotalMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryDoV2) GetTotalMemoryOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalMemory) {
		return nil, false
	}
	return o.TotalMemory, true
}

// HasTotalMemory returns a boolean if a field has been set.
func (o *MemoryDoV2) HasTotalMemory() bool {
	if o != nil && !IsNil(o.TotalMemory) {
		return true
	}

	return false
}

// SetTotalMemory gets a reference to the given float64 and assigns it to the TotalMemory field.
func (o *MemoryDoV2) SetTotalMemory(v float64) {
	o.TotalMemory = &v
}

// GetUsedMemory returns the UsedMemory field value if set, zero value otherwise.
func (o *MemoryDoV2) GetUsedMemory() float64 {
	if o == nil || IsNil(o.UsedMemory) {
		var ret float64
		return ret
	}
	return *o.UsedMemory
}

// GetUsedMemoryOk returns a tuple with the UsedMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryDoV2) GetUsedMemoryOk() (*float64, bool) {
	if o == nil || IsNil(o.UsedMemory) {
		return nil, false
	}
	return o.UsedMemory, true
}

// HasUsedMemory returns a boolean if a field has been set.
func (o *MemoryDoV2) HasUsedMemory() bool {
	if o != nil && !IsNil(o.UsedMemory) {
		return true
	}

	return false
}

// SetUsedMemory gets a reference to the given float64 and assigns it to the UsedMemory field.
func (o *MemoryDoV2) SetUsedMemory(v float64) {
	o.UsedMemory = &v
}

func (o MemoryDoV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemoryDoV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalMemory) {
		toSerialize["totalMemory"] = o.TotalMemory
	}
	if !IsNil(o.UsedMemory) {
		toSerialize["usedMemory"] = o.UsedMemory
	}
	return toSerialize, nil
}

type NullableMemoryDoV2 struct {
	value *MemoryDoV2
	isSet bool
}

func (v NullableMemoryDoV2) Get() *MemoryDoV2 {
	return v.value
}

func (v *NullableMemoryDoV2) Set(val *MemoryDoV2) {
	v.value = val
	v.isSet = true
}

func (v NullableMemoryDoV2) IsSet() bool {
	return v.isSet
}

func (v *NullableMemoryDoV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemoryDoV2(val *MemoryDoV2) *NullableMemoryDoV2 {
	return &NullableMemoryDoV2{value: val, isSet: true}
}

func (v NullableMemoryDoV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemoryDoV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


