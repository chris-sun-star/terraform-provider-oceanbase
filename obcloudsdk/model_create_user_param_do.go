/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the CreateUserParamDo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserParamDo{}

// CreateUserParamDo struct for CreateUserParamDo
type CreateUserParamDo struct {
	RequestId *string `json:"requestId,omitempty"`
	CallerType *string `json:"callerType,omitempty"`
	AccessKeyId *string `json:"accessKeyId,omitempty"`
	SecurityToken *string `json:"securityToken,omitempty"`
	CallerUid *string `json:"callerUid,omitempty"`
	CallerBid *string `json:"callerBid,omitempty"`
	StsTokenCallerUid *string `json:"stsTokenCallerUid,omitempty"`
	StsTokenCallerBid *string `json:"stsTokenCallerBid,omitempty"`
	AcceptLanguage *string `json:"acceptLanguage,omitempty"`
	PageNumber *int32 `json:"pageNumber,omitempty"`
	PageSize *int32 `json:"pageSize,omitempty"`
	MergedCallerBid *string `json:"mergedCallerBid,omitempty"`
	InstanceId *string `json:"instanceId,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
	UserName *string `json:"userName,omitempty"`
	Password *string `json:"password,omitempty"`
	UserType *string `json:"userType,omitempty"`
	Roles *string `json:"roles,omitempty"`
	EncryptionType *string `json:"encryptionType,omitempty"`
	Description *string `json:"description,omitempty"`
	MergedCallerUid *string `json:"mergedCallerUid,omitempty"`
	UserID *string `json:"user_ID,omitempty"`
	Uid *string `json:"uid,omitempty"`
}

// NewCreateUserParamDo instantiates a new CreateUserParamDo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserParamDo() *CreateUserParamDo {
	this := CreateUserParamDo{}
	return &this
}

// NewCreateUserParamDoWithDefaults instantiates a new CreateUserParamDo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserParamDoWithDefaults() *CreateUserParamDo {
	this := CreateUserParamDo{}
	return &this
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *CreateUserParamDo) SetRequestId(v string) {
	o.RequestId = &v
}

// GetCallerType returns the CallerType field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetCallerType() string {
	if o == nil || IsNil(o.CallerType) {
		var ret string
		return ret
	}
	return *o.CallerType
}

// GetCallerTypeOk returns a tuple with the CallerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetCallerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CallerType) {
		return nil, false
	}
	return o.CallerType, true
}

// HasCallerType returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasCallerType() bool {
	if o != nil && !IsNil(o.CallerType) {
		return true
	}

	return false
}

// SetCallerType gets a reference to the given string and assigns it to the CallerType field.
func (o *CreateUserParamDo) SetCallerType(v string) {
	o.CallerType = &v
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetAccessKeyId() string {
	if o == nil || IsNil(o.AccessKeyId) {
		var ret string
		return ret
	}
	return *o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetAccessKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKeyId) {
		return nil, false
	}
	return o.AccessKeyId, true
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasAccessKeyId() bool {
	if o != nil && !IsNil(o.AccessKeyId) {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given string and assigns it to the AccessKeyId field.
func (o *CreateUserParamDo) SetAccessKeyId(v string) {
	o.AccessKeyId = &v
}

// GetSecurityToken returns the SecurityToken field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetSecurityToken() string {
	if o == nil || IsNil(o.SecurityToken) {
		var ret string
		return ret
	}
	return *o.SecurityToken
}

// GetSecurityTokenOk returns a tuple with the SecurityToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetSecurityTokenOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityToken) {
		return nil, false
	}
	return o.SecurityToken, true
}

// HasSecurityToken returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasSecurityToken() bool {
	if o != nil && !IsNil(o.SecurityToken) {
		return true
	}

	return false
}

// SetSecurityToken gets a reference to the given string and assigns it to the SecurityToken field.
func (o *CreateUserParamDo) SetSecurityToken(v string) {
	o.SecurityToken = &v
}

// GetCallerUid returns the CallerUid field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetCallerUid() string {
	if o == nil || IsNil(o.CallerUid) {
		var ret string
		return ret
	}
	return *o.CallerUid
}

// GetCallerUidOk returns a tuple with the CallerUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetCallerUidOk() (*string, bool) {
	if o == nil || IsNil(o.CallerUid) {
		return nil, false
	}
	return o.CallerUid, true
}

// HasCallerUid returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasCallerUid() bool {
	if o != nil && !IsNil(o.CallerUid) {
		return true
	}

	return false
}

// SetCallerUid gets a reference to the given string and assigns it to the CallerUid field.
func (o *CreateUserParamDo) SetCallerUid(v string) {
	o.CallerUid = &v
}

// GetCallerBid returns the CallerBid field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetCallerBid() string {
	if o == nil || IsNil(o.CallerBid) {
		var ret string
		return ret
	}
	return *o.CallerBid
}

// GetCallerBidOk returns a tuple with the CallerBid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetCallerBidOk() (*string, bool) {
	if o == nil || IsNil(o.CallerBid) {
		return nil, false
	}
	return o.CallerBid, true
}

// HasCallerBid returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasCallerBid() bool {
	if o != nil && !IsNil(o.CallerBid) {
		return true
	}

	return false
}

// SetCallerBid gets a reference to the given string and assigns it to the CallerBid field.
func (o *CreateUserParamDo) SetCallerBid(v string) {
	o.CallerBid = &v
}

// GetStsTokenCallerUid returns the StsTokenCallerUid field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetStsTokenCallerUid() string {
	if o == nil || IsNil(o.StsTokenCallerUid) {
		var ret string
		return ret
	}
	return *o.StsTokenCallerUid
}

// GetStsTokenCallerUidOk returns a tuple with the StsTokenCallerUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetStsTokenCallerUidOk() (*string, bool) {
	if o == nil || IsNil(o.StsTokenCallerUid) {
		return nil, false
	}
	return o.StsTokenCallerUid, true
}

// HasStsTokenCallerUid returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasStsTokenCallerUid() bool {
	if o != nil && !IsNil(o.StsTokenCallerUid) {
		return true
	}

	return false
}

// SetStsTokenCallerUid gets a reference to the given string and assigns it to the StsTokenCallerUid field.
func (o *CreateUserParamDo) SetStsTokenCallerUid(v string) {
	o.StsTokenCallerUid = &v
}

// GetStsTokenCallerBid returns the StsTokenCallerBid field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetStsTokenCallerBid() string {
	if o == nil || IsNil(o.StsTokenCallerBid) {
		var ret string
		return ret
	}
	return *o.StsTokenCallerBid
}

// GetStsTokenCallerBidOk returns a tuple with the StsTokenCallerBid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetStsTokenCallerBidOk() (*string, bool) {
	if o == nil || IsNil(o.StsTokenCallerBid) {
		return nil, false
	}
	return o.StsTokenCallerBid, true
}

// HasStsTokenCallerBid returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasStsTokenCallerBid() bool {
	if o != nil && !IsNil(o.StsTokenCallerBid) {
		return true
	}

	return false
}

// SetStsTokenCallerBid gets a reference to the given string and assigns it to the StsTokenCallerBid field.
func (o *CreateUserParamDo) SetStsTokenCallerBid(v string) {
	o.StsTokenCallerBid = &v
}

// GetAcceptLanguage returns the AcceptLanguage field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetAcceptLanguage() string {
	if o == nil || IsNil(o.AcceptLanguage) {
		var ret string
		return ret
	}
	return *o.AcceptLanguage
}

// GetAcceptLanguageOk returns a tuple with the AcceptLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetAcceptLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.AcceptLanguage) {
		return nil, false
	}
	return o.AcceptLanguage, true
}

// HasAcceptLanguage returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasAcceptLanguage() bool {
	if o != nil && !IsNil(o.AcceptLanguage) {
		return true
	}

	return false
}

// SetAcceptLanguage gets a reference to the given string and assigns it to the AcceptLanguage field.
func (o *CreateUserParamDo) SetAcceptLanguage(v string) {
	o.AcceptLanguage = &v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetPageNumber() int32 {
	if o == nil || IsNil(o.PageNumber) {
		var ret int32
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetPageNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasPageNumber() bool {
	if o != nil && !IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int32 and assigns it to the PageNumber field.
func (o *CreateUserParamDo) SetPageNumber(v int32) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *CreateUserParamDo) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetMergedCallerBid returns the MergedCallerBid field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetMergedCallerBid() string {
	if o == nil || IsNil(o.MergedCallerBid) {
		var ret string
		return ret
	}
	return *o.MergedCallerBid
}

// GetMergedCallerBidOk returns a tuple with the MergedCallerBid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetMergedCallerBidOk() (*string, bool) {
	if o == nil || IsNil(o.MergedCallerBid) {
		return nil, false
	}
	return o.MergedCallerBid, true
}

// HasMergedCallerBid returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasMergedCallerBid() bool {
	if o != nil && !IsNil(o.MergedCallerBid) {
		return true
	}

	return false
}

// SetMergedCallerBid gets a reference to the given string and assigns it to the MergedCallerBid field.
func (o *CreateUserParamDo) SetMergedCallerBid(v string) {
	o.MergedCallerBid = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetInstanceId() string {
	if o == nil || IsNil(o.InstanceId) {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *CreateUserParamDo) SetInstanceId(v string) {
	o.InstanceId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *CreateUserParamDo) SetTenantId(v string) {
	o.TenantId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *CreateUserParamDo) SetUserName(v string) {
	o.UserName = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateUserParamDo) SetPassword(v string) {
	o.Password = &v
}

// GetUserType returns the UserType field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetUserType() string {
	if o == nil || IsNil(o.UserType) {
		var ret string
		return ret
	}
	return *o.UserType
}

// GetUserTypeOk returns a tuple with the UserType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetUserTypeOk() (*string, bool) {
	if o == nil || IsNil(o.UserType) {
		return nil, false
	}
	return o.UserType, true
}

// HasUserType returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasUserType() bool {
	if o != nil && !IsNil(o.UserType) {
		return true
	}

	return false
}

// SetUserType gets a reference to the given string and assigns it to the UserType field.
func (o *CreateUserParamDo) SetUserType(v string) {
	o.UserType = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetRoles() string {
	if o == nil || IsNil(o.Roles) {
		var ret string
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetRolesOk() (*string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given string and assigns it to the Roles field.
func (o *CreateUserParamDo) SetRoles(v string) {
	o.Roles = &v
}

// GetEncryptionType returns the EncryptionType field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetEncryptionType() string {
	if o == nil || IsNil(o.EncryptionType) {
		var ret string
		return ret
	}
	return *o.EncryptionType
}

// GetEncryptionTypeOk returns a tuple with the EncryptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetEncryptionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptionType) {
		return nil, false
	}
	return o.EncryptionType, true
}

// HasEncryptionType returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasEncryptionType() bool {
	if o != nil && !IsNil(o.EncryptionType) {
		return true
	}

	return false
}

// SetEncryptionType gets a reference to the given string and assigns it to the EncryptionType field.
func (o *CreateUserParamDo) SetEncryptionType(v string) {
	o.EncryptionType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateUserParamDo) SetDescription(v string) {
	o.Description = &v
}

// GetMergedCallerUid returns the MergedCallerUid field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetMergedCallerUid() string {
	if o == nil || IsNil(o.MergedCallerUid) {
		var ret string
		return ret
	}
	return *o.MergedCallerUid
}

// GetMergedCallerUidOk returns a tuple with the MergedCallerUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetMergedCallerUidOk() (*string, bool) {
	if o == nil || IsNil(o.MergedCallerUid) {
		return nil, false
	}
	return o.MergedCallerUid, true
}

// HasMergedCallerUid returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasMergedCallerUid() bool {
	if o != nil && !IsNil(o.MergedCallerUid) {
		return true
	}

	return false
}

// SetMergedCallerUid gets a reference to the given string and assigns it to the MergedCallerUid field.
func (o *CreateUserParamDo) SetMergedCallerUid(v string) {
	o.MergedCallerUid = &v
}

// GetUserID returns the UserID field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetUserID() string {
	if o == nil || IsNil(o.UserID) {
		var ret string
		return ret
	}
	return *o.UserID
}

// GetUserIDOk returns a tuple with the UserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetUserIDOk() (*string, bool) {
	if o == nil || IsNil(o.UserID) {
		return nil, false
	}
	return o.UserID, true
}

// HasUserID returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasUserID() bool {
	if o != nil && !IsNil(o.UserID) {
		return true
	}

	return false
}

// SetUserID gets a reference to the given string and assigns it to the UserID field.
func (o *CreateUserParamDo) SetUserID(v string) {
	o.UserID = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *CreateUserParamDo) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserParamDo) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *CreateUserParamDo) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *CreateUserParamDo) SetUid(v string) {
	o.Uid = &v
}

func (o CreateUserParamDo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUserParamDo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	if !IsNil(o.CallerType) {
		toSerialize["callerType"] = o.CallerType
	}
	if !IsNil(o.AccessKeyId) {
		toSerialize["accessKeyId"] = o.AccessKeyId
	}
	if !IsNil(o.SecurityToken) {
		toSerialize["securityToken"] = o.SecurityToken
	}
	if !IsNil(o.CallerUid) {
		toSerialize["callerUid"] = o.CallerUid
	}
	if !IsNil(o.CallerBid) {
		toSerialize["callerBid"] = o.CallerBid
	}
	if !IsNil(o.StsTokenCallerUid) {
		toSerialize["stsTokenCallerUid"] = o.StsTokenCallerUid
	}
	if !IsNil(o.StsTokenCallerBid) {
		toSerialize["stsTokenCallerBid"] = o.StsTokenCallerBid
	}
	if !IsNil(o.AcceptLanguage) {
		toSerialize["acceptLanguage"] = o.AcceptLanguage
	}
	if !IsNil(o.PageNumber) {
		toSerialize["pageNumber"] = o.PageNumber
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	if !IsNil(o.MergedCallerBid) {
		toSerialize["mergedCallerBid"] = o.MergedCallerBid
	}
	if !IsNil(o.InstanceId) {
		toSerialize["instanceId"] = o.InstanceId
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.UserType) {
		toSerialize["userType"] = o.UserType
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.EncryptionType) {
		toSerialize["encryptionType"] = o.EncryptionType
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.MergedCallerUid) {
		toSerialize["mergedCallerUid"] = o.MergedCallerUid
	}
	if !IsNil(o.UserID) {
		toSerialize["user_ID"] = o.UserID
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	return toSerialize, nil
}

type NullableCreateUserParamDo struct {
	value *CreateUserParamDo
	isSet bool
}

func (v NullableCreateUserParamDo) Get() *CreateUserParamDo {
	return v.value
}

func (v *NullableCreateUserParamDo) Set(val *CreateUserParamDo) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserParamDo) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserParamDo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserParamDo(val *CreateUserParamDo) *NullableCreateUserParamDo {
	return &NullableCreateUserParamDo{value: val, isSet: true}
}

func (v NullableCreateUserParamDo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserParamDo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


