/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the TenantConnectionDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantConnectionDTO{}

// TenantConnectionDTO struct for TenantConnectionDTO
type TenantConnectionDTO struct {
	TenantId *string `json:"tenantId,omitempty"`
	VpcId *string `json:"vpcId,omitempty"`
	UserVpcOwnerId *string `json:"userVpcOwnerId,omitempty"`
	AddressId *string `json:"addressId,omitempty"`
	ServiceType *string `json:"serviceType,omitempty"`
	AddressType *string `json:"addressType,omitempty"`
	NetworkType *string `json:"networkType,omitempty"`
	Role *string `json:"role,omitempty"`
	IntranetAddress *string `json:"intranetAddress,omitempty"`
	IntranetPort *int32 `json:"intranetPort,omitempty"`
	IntranetDomain *string `json:"intranetDomain,omitempty"`
	IntranetAddressStatus *string `json:"intranetAddressStatus,omitempty"`
	InternetAddress *string `json:"internetAddress,omitempty"`
	InternetPort *int32 `json:"internetPort,omitempty"`
	InternetDomain *string `json:"internetDomain,omitempty"`
	InternetAddressStatus *string `json:"internetAddressStatus,omitempty"`
	IntranetPeeringAddress *string `json:"intranetPeeringAddress,omitempty"`
	IntranetPeeringPort *int32 `json:"intranetPeeringPort,omitempty"`
	IntranetPeeringDomain *string `json:"intranetPeeringDomain,omitempty"`
	IntranetPeeringAddressStatus *string `json:"intranetPeeringAddressStatus,omitempty"`
	IntranetAddressMasterZoneId *string `json:"intranetAddressMasterZoneId,omitempty"`
	IntranetAddressSlaveZoneId *string `json:"intranetAddressSlaveZoneId,omitempty"`
	ConnectionZones []string `json:"connectionZones,omitempty"`
	AddressStatus *string `json:"addressStatus,omitempty"`
	UserNameFormat *string `json:"userNameFormat,omitempty"`
	PrivateLinkList []TenantPrivateLinkDTO `json:"privateLinkList,omitempty"`
	PeeringDstVpcId *string `json:"peeringDstVpcId,omitempty"`
	PeeringDstCidrList *string `json:"peeringDstCidrList,omitempty"`
	PeeringId *string `json:"peeringId,omitempty"`
	UseSSL *bool `json:"useSSL,omitempty"`
	ProxyClusterId *string `json:"proxyClusterId,omitempty"`
	MaxConnectionNum *int32 `json:"maxConnectionNum,omitempty"`
	InternetMaxConnectionNum *int32 `json:"internetMaxConnectionNum,omitempty"`
	IntranetPeeringMaxConnectionNum *int32 `json:"intranetPeeringMaxConnectionNum,omitempty"`
	EnableRPc *bool `json:"enableRPc,omitempty"`
	IntranetRpcPort *int32 `json:"intranetRpcPort,omitempty"`
	InternetRpcPort *int32 `json:"internetRpcPort,omitempty"`
	ProxyClusterInfo *ProxyClusterInfoDTO `json:"proxyClusterInfo,omitempty"`
	VswitchId *string `json:"vswitchId,omitempty"`
}

// NewTenantConnectionDTO instantiates a new TenantConnectionDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantConnectionDTO() *TenantConnectionDTO {
	this := TenantConnectionDTO{}
	return &this
}

// NewTenantConnectionDTOWithDefaults instantiates a new TenantConnectionDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantConnectionDTOWithDefaults() *TenantConnectionDTO {
	this := TenantConnectionDTO{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *TenantConnectionDTO) SetTenantId(v string) {
	o.TenantId = &v
}

// GetVpcId returns the VpcId field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetVpcId() string {
	if o == nil || IsNil(o.VpcId) {
		var ret string
		return ret
	}
	return *o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetVpcIdOk() (*string, bool) {
	if o == nil || IsNil(o.VpcId) {
		return nil, false
	}
	return o.VpcId, true
}

// HasVpcId returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasVpcId() bool {
	if o != nil && !IsNil(o.VpcId) {
		return true
	}

	return false
}

// SetVpcId gets a reference to the given string and assigns it to the VpcId field.
func (o *TenantConnectionDTO) SetVpcId(v string) {
	o.VpcId = &v
}

// GetUserVpcOwnerId returns the UserVpcOwnerId field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetUserVpcOwnerId() string {
	if o == nil || IsNil(o.UserVpcOwnerId) {
		var ret string
		return ret
	}
	return *o.UserVpcOwnerId
}

// GetUserVpcOwnerIdOk returns a tuple with the UserVpcOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetUserVpcOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserVpcOwnerId) {
		return nil, false
	}
	return o.UserVpcOwnerId, true
}

// HasUserVpcOwnerId returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasUserVpcOwnerId() bool {
	if o != nil && !IsNil(o.UserVpcOwnerId) {
		return true
	}

	return false
}

// SetUserVpcOwnerId gets a reference to the given string and assigns it to the UserVpcOwnerId field.
func (o *TenantConnectionDTO) SetUserVpcOwnerId(v string) {
	o.UserVpcOwnerId = &v
}

// GetAddressId returns the AddressId field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetAddressId() string {
	if o == nil || IsNil(o.AddressId) {
		var ret string
		return ret
	}
	return *o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetAddressIdOk() (*string, bool) {
	if o == nil || IsNil(o.AddressId) {
		return nil, false
	}
	return o.AddressId, true
}

// HasAddressId returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasAddressId() bool {
	if o != nil && !IsNil(o.AddressId) {
		return true
	}

	return false
}

// SetAddressId gets a reference to the given string and assigns it to the AddressId field.
func (o *TenantConnectionDTO) SetAddressId(v string) {
	o.AddressId = &v
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetServiceType() string {
	if o == nil || IsNil(o.ServiceType) {
		var ret string
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetServiceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceType) {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasServiceType() bool {
	if o != nil && !IsNil(o.ServiceType) {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given string and assigns it to the ServiceType field.
func (o *TenantConnectionDTO) SetServiceType(v string) {
	o.ServiceType = &v
}

// GetAddressType returns the AddressType field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetAddressType() string {
	if o == nil || IsNil(o.AddressType) {
		var ret string
		return ret
	}
	return *o.AddressType
}

// GetAddressTypeOk returns a tuple with the AddressType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetAddressTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AddressType) {
		return nil, false
	}
	return o.AddressType, true
}

// HasAddressType returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasAddressType() bool {
	if o != nil && !IsNil(o.AddressType) {
		return true
	}

	return false
}

// SetAddressType gets a reference to the given string and assigns it to the AddressType field.
func (o *TenantConnectionDTO) SetAddressType(v string) {
	o.AddressType = &v
}

// GetNetworkType returns the NetworkType field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetNetworkType() string {
	if o == nil || IsNil(o.NetworkType) {
		var ret string
		return ret
	}
	return *o.NetworkType
}

// GetNetworkTypeOk returns a tuple with the NetworkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetNetworkTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkType) {
		return nil, false
	}
	return o.NetworkType, true
}

// HasNetworkType returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasNetworkType() bool {
	if o != nil && !IsNil(o.NetworkType) {
		return true
	}

	return false
}

// SetNetworkType gets a reference to the given string and assigns it to the NetworkType field.
func (o *TenantConnectionDTO) SetNetworkType(v string) {
	o.NetworkType = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *TenantConnectionDTO) SetRole(v string) {
	o.Role = &v
}

// GetIntranetAddress returns the IntranetAddress field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetIntranetAddress() string {
	if o == nil || IsNil(o.IntranetAddress) {
		var ret string
		return ret
	}
	return *o.IntranetAddress
}

// GetIntranetAddressOk returns a tuple with the IntranetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetIntranetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IntranetAddress) {
		return nil, false
	}
	return o.IntranetAddress, true
}

// HasIntranetAddress returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasIntranetAddress() bool {
	if o != nil && !IsNil(o.IntranetAddress) {
		return true
	}

	return false
}

// SetIntranetAddress gets a reference to the given string and assigns it to the IntranetAddress field.
func (o *TenantConnectionDTO) SetIntranetAddress(v string) {
	o.IntranetAddress = &v
}

// GetIntranetPort returns the IntranetPort field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetIntranetPort() int32 {
	if o == nil || IsNil(o.IntranetPort) {
		var ret int32
		return ret
	}
	return *o.IntranetPort
}

// GetIntranetPortOk returns a tuple with the IntranetPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetIntranetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.IntranetPort) {
		return nil, false
	}
	return o.IntranetPort, true
}

// HasIntranetPort returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasIntranetPort() bool {
	if o != nil && !IsNil(o.IntranetPort) {
		return true
	}

	return false
}

// SetIntranetPort gets a reference to the given int32 and assigns it to the IntranetPort field.
func (o *TenantConnectionDTO) SetIntranetPort(v int32) {
	o.IntranetPort = &v
}

// GetIntranetDomain returns the IntranetDomain field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetIntranetDomain() string {
	if o == nil || IsNil(o.IntranetDomain) {
		var ret string
		return ret
	}
	return *o.IntranetDomain
}

// GetIntranetDomainOk returns a tuple with the IntranetDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetIntranetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.IntranetDomain) {
		return nil, false
	}
	return o.IntranetDomain, true
}

// HasIntranetDomain returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasIntranetDomain() bool {
	if o != nil && !IsNil(o.IntranetDomain) {
		return true
	}

	return false
}

// SetIntranetDomain gets a reference to the given string and assigns it to the IntranetDomain field.
func (o *TenantConnectionDTO) SetIntranetDomain(v string) {
	o.IntranetDomain = &v
}

// GetIntranetAddressStatus returns the IntranetAddressStatus field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetIntranetAddressStatus() string {
	if o == nil || IsNil(o.IntranetAddressStatus) {
		var ret string
		return ret
	}
	return *o.IntranetAddressStatus
}

// GetIntranetAddressStatusOk returns a tuple with the IntranetAddressStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetIntranetAddressStatusOk() (*string, bool) {
	if o == nil || IsNil(o.IntranetAddressStatus) {
		return nil, false
	}
	return o.IntranetAddressStatus, true
}

// HasIntranetAddressStatus returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasIntranetAddressStatus() bool {
	if o != nil && !IsNil(o.IntranetAddressStatus) {
		return true
	}

	return false
}

// SetIntranetAddressStatus gets a reference to the given string and assigns it to the IntranetAddressStatus field.
func (o *TenantConnectionDTO) SetIntranetAddressStatus(v string) {
	o.IntranetAddressStatus = &v
}

// GetInternetAddress returns the InternetAddress field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetInternetAddress() string {
	if o == nil || IsNil(o.InternetAddress) {
		var ret string
		return ret
	}
	return *o.InternetAddress
}

// GetInternetAddressOk returns a tuple with the InternetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetInternetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.InternetAddress) {
		return nil, false
	}
	return o.InternetAddress, true
}

// HasInternetAddress returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasInternetAddress() bool {
	if o != nil && !IsNil(o.InternetAddress) {
		return true
	}

	return false
}

// SetInternetAddress gets a reference to the given string and assigns it to the InternetAddress field.
func (o *TenantConnectionDTO) SetInternetAddress(v string) {
	o.InternetAddress = &v
}

// GetInternetPort returns the InternetPort field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetInternetPort() int32 {
	if o == nil || IsNil(o.InternetPort) {
		var ret int32
		return ret
	}
	return *o.InternetPort
}

// GetInternetPortOk returns a tuple with the InternetPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetInternetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.InternetPort) {
		return nil, false
	}
	return o.InternetPort, true
}

// HasInternetPort returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasInternetPort() bool {
	if o != nil && !IsNil(o.InternetPort) {
		return true
	}

	return false
}

// SetInternetPort gets a reference to the given int32 and assigns it to the InternetPort field.
func (o *TenantConnectionDTO) SetInternetPort(v int32) {
	o.InternetPort = &v
}

// GetInternetDomain returns the InternetDomain field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetInternetDomain() string {
	if o == nil || IsNil(o.InternetDomain) {
		var ret string
		return ret
	}
	return *o.InternetDomain
}

// GetInternetDomainOk returns a tuple with the InternetDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetInternetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.InternetDomain) {
		return nil, false
	}
	return o.InternetDomain, true
}

// HasInternetDomain returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasInternetDomain() bool {
	if o != nil && !IsNil(o.InternetDomain) {
		return true
	}

	return false
}

// SetInternetDomain gets a reference to the given string and assigns it to the InternetDomain field.
func (o *TenantConnectionDTO) SetInternetDomain(v string) {
	o.InternetDomain = &v
}

// GetInternetAddressStatus returns the InternetAddressStatus field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetInternetAddressStatus() string {
	if o == nil || IsNil(o.InternetAddressStatus) {
		var ret string
		return ret
	}
	return *o.InternetAddressStatus
}

// GetInternetAddressStatusOk returns a tuple with the InternetAddressStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetInternetAddressStatusOk() (*string, bool) {
	if o == nil || IsNil(o.InternetAddressStatus) {
		return nil, false
	}
	return o.InternetAddressStatus, true
}

// HasInternetAddressStatus returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasInternetAddressStatus() bool {
	if o != nil && !IsNil(o.InternetAddressStatus) {
		return true
	}

	return false
}

// SetInternetAddressStatus gets a reference to the given string and assigns it to the InternetAddressStatus field.
func (o *TenantConnectionDTO) SetInternetAddressStatus(v string) {
	o.InternetAddressStatus = &v
}

// GetIntranetPeeringAddress returns the IntranetPeeringAddress field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetIntranetPeeringAddress() string {
	if o == nil || IsNil(o.IntranetPeeringAddress) {
		var ret string
		return ret
	}
	return *o.IntranetPeeringAddress
}

// GetIntranetPeeringAddressOk returns a tuple with the IntranetPeeringAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetIntranetPeeringAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IntranetPeeringAddress) {
		return nil, false
	}
	return o.IntranetPeeringAddress, true
}

// HasIntranetPeeringAddress returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasIntranetPeeringAddress() bool {
	if o != nil && !IsNil(o.IntranetPeeringAddress) {
		return true
	}

	return false
}

// SetIntranetPeeringAddress gets a reference to the given string and assigns it to the IntranetPeeringAddress field.
func (o *TenantConnectionDTO) SetIntranetPeeringAddress(v string) {
	o.IntranetPeeringAddress = &v
}

// GetIntranetPeeringPort returns the IntranetPeeringPort field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetIntranetPeeringPort() int32 {
	if o == nil || IsNil(o.IntranetPeeringPort) {
		var ret int32
		return ret
	}
	return *o.IntranetPeeringPort
}

// GetIntranetPeeringPortOk returns a tuple with the IntranetPeeringPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetIntranetPeeringPortOk() (*int32, bool) {
	if o == nil || IsNil(o.IntranetPeeringPort) {
		return nil, false
	}
	return o.IntranetPeeringPort, true
}

// HasIntranetPeeringPort returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasIntranetPeeringPort() bool {
	if o != nil && !IsNil(o.IntranetPeeringPort) {
		return true
	}

	return false
}

// SetIntranetPeeringPort gets a reference to the given int32 and assigns it to the IntranetPeeringPort field.
func (o *TenantConnectionDTO) SetIntranetPeeringPort(v int32) {
	o.IntranetPeeringPort = &v
}

// GetIntranetPeeringDomain returns the IntranetPeeringDomain field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetIntranetPeeringDomain() string {
	if o == nil || IsNil(o.IntranetPeeringDomain) {
		var ret string
		return ret
	}
	return *o.IntranetPeeringDomain
}

// GetIntranetPeeringDomainOk returns a tuple with the IntranetPeeringDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetIntranetPeeringDomainOk() (*string, bool) {
	if o == nil || IsNil(o.IntranetPeeringDomain) {
		return nil, false
	}
	return o.IntranetPeeringDomain, true
}

// HasIntranetPeeringDomain returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasIntranetPeeringDomain() bool {
	if o != nil && !IsNil(o.IntranetPeeringDomain) {
		return true
	}

	return false
}

// SetIntranetPeeringDomain gets a reference to the given string and assigns it to the IntranetPeeringDomain field.
func (o *TenantConnectionDTO) SetIntranetPeeringDomain(v string) {
	o.IntranetPeeringDomain = &v
}

// GetIntranetPeeringAddressStatus returns the IntranetPeeringAddressStatus field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetIntranetPeeringAddressStatus() string {
	if o == nil || IsNil(o.IntranetPeeringAddressStatus) {
		var ret string
		return ret
	}
	return *o.IntranetPeeringAddressStatus
}

// GetIntranetPeeringAddressStatusOk returns a tuple with the IntranetPeeringAddressStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetIntranetPeeringAddressStatusOk() (*string, bool) {
	if o == nil || IsNil(o.IntranetPeeringAddressStatus) {
		return nil, false
	}
	return o.IntranetPeeringAddressStatus, true
}

// HasIntranetPeeringAddressStatus returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasIntranetPeeringAddressStatus() bool {
	if o != nil && !IsNil(o.IntranetPeeringAddressStatus) {
		return true
	}

	return false
}

// SetIntranetPeeringAddressStatus gets a reference to the given string and assigns it to the IntranetPeeringAddressStatus field.
func (o *TenantConnectionDTO) SetIntranetPeeringAddressStatus(v string) {
	o.IntranetPeeringAddressStatus = &v
}

// GetIntranetAddressMasterZoneId returns the IntranetAddressMasterZoneId field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetIntranetAddressMasterZoneId() string {
	if o == nil || IsNil(o.IntranetAddressMasterZoneId) {
		var ret string
		return ret
	}
	return *o.IntranetAddressMasterZoneId
}

// GetIntranetAddressMasterZoneIdOk returns a tuple with the IntranetAddressMasterZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetIntranetAddressMasterZoneIdOk() (*string, bool) {
	if o == nil || IsNil(o.IntranetAddressMasterZoneId) {
		return nil, false
	}
	return o.IntranetAddressMasterZoneId, true
}

// HasIntranetAddressMasterZoneId returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasIntranetAddressMasterZoneId() bool {
	if o != nil && !IsNil(o.IntranetAddressMasterZoneId) {
		return true
	}

	return false
}

// SetIntranetAddressMasterZoneId gets a reference to the given string and assigns it to the IntranetAddressMasterZoneId field.
func (o *TenantConnectionDTO) SetIntranetAddressMasterZoneId(v string) {
	o.IntranetAddressMasterZoneId = &v
}

// GetIntranetAddressSlaveZoneId returns the IntranetAddressSlaveZoneId field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetIntranetAddressSlaveZoneId() string {
	if o == nil || IsNil(o.IntranetAddressSlaveZoneId) {
		var ret string
		return ret
	}
	return *o.IntranetAddressSlaveZoneId
}

// GetIntranetAddressSlaveZoneIdOk returns a tuple with the IntranetAddressSlaveZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetIntranetAddressSlaveZoneIdOk() (*string, bool) {
	if o == nil || IsNil(o.IntranetAddressSlaveZoneId) {
		return nil, false
	}
	return o.IntranetAddressSlaveZoneId, true
}

// HasIntranetAddressSlaveZoneId returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasIntranetAddressSlaveZoneId() bool {
	if o != nil && !IsNil(o.IntranetAddressSlaveZoneId) {
		return true
	}

	return false
}

// SetIntranetAddressSlaveZoneId gets a reference to the given string and assigns it to the IntranetAddressSlaveZoneId field.
func (o *TenantConnectionDTO) SetIntranetAddressSlaveZoneId(v string) {
	o.IntranetAddressSlaveZoneId = &v
}

// GetConnectionZones returns the ConnectionZones field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetConnectionZones() []string {
	if o == nil || IsNil(o.ConnectionZones) {
		var ret []string
		return ret
	}
	return o.ConnectionZones
}

// GetConnectionZonesOk returns a tuple with the ConnectionZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetConnectionZonesOk() ([]string, bool) {
	if o == nil || IsNil(o.ConnectionZones) {
		return nil, false
	}
	return o.ConnectionZones, true
}

// HasConnectionZones returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasConnectionZones() bool {
	if o != nil && !IsNil(o.ConnectionZones) {
		return true
	}

	return false
}

// SetConnectionZones gets a reference to the given []string and assigns it to the ConnectionZones field.
func (o *TenantConnectionDTO) SetConnectionZones(v []string) {
	o.ConnectionZones = v
}

// GetAddressStatus returns the AddressStatus field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetAddressStatus() string {
	if o == nil || IsNil(o.AddressStatus) {
		var ret string
		return ret
	}
	return *o.AddressStatus
}

// GetAddressStatusOk returns a tuple with the AddressStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetAddressStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AddressStatus) {
		return nil, false
	}
	return o.AddressStatus, true
}

// HasAddressStatus returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasAddressStatus() bool {
	if o != nil && !IsNil(o.AddressStatus) {
		return true
	}

	return false
}

// SetAddressStatus gets a reference to the given string and assigns it to the AddressStatus field.
func (o *TenantConnectionDTO) SetAddressStatus(v string) {
	o.AddressStatus = &v
}

// GetUserNameFormat returns the UserNameFormat field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetUserNameFormat() string {
	if o == nil || IsNil(o.UserNameFormat) {
		var ret string
		return ret
	}
	return *o.UserNameFormat
}

// GetUserNameFormatOk returns a tuple with the UserNameFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetUserNameFormatOk() (*string, bool) {
	if o == nil || IsNil(o.UserNameFormat) {
		return nil, false
	}
	return o.UserNameFormat, true
}

// HasUserNameFormat returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasUserNameFormat() bool {
	if o != nil && !IsNil(o.UserNameFormat) {
		return true
	}

	return false
}

// SetUserNameFormat gets a reference to the given string and assigns it to the UserNameFormat field.
func (o *TenantConnectionDTO) SetUserNameFormat(v string) {
	o.UserNameFormat = &v
}

// GetPrivateLinkList returns the PrivateLinkList field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetPrivateLinkList() []TenantPrivateLinkDTO {
	if o == nil || IsNil(o.PrivateLinkList) {
		var ret []TenantPrivateLinkDTO
		return ret
	}
	return o.PrivateLinkList
}

// GetPrivateLinkListOk returns a tuple with the PrivateLinkList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetPrivateLinkListOk() ([]TenantPrivateLinkDTO, bool) {
	if o == nil || IsNil(o.PrivateLinkList) {
		return nil, false
	}
	return o.PrivateLinkList, true
}

// HasPrivateLinkList returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasPrivateLinkList() bool {
	if o != nil && !IsNil(o.PrivateLinkList) {
		return true
	}

	return false
}

// SetPrivateLinkList gets a reference to the given []TenantPrivateLinkDTO and assigns it to the PrivateLinkList field.
func (o *TenantConnectionDTO) SetPrivateLinkList(v []TenantPrivateLinkDTO) {
	o.PrivateLinkList = v
}

// GetPeeringDstVpcId returns the PeeringDstVpcId field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetPeeringDstVpcId() string {
	if o == nil || IsNil(o.PeeringDstVpcId) {
		var ret string
		return ret
	}
	return *o.PeeringDstVpcId
}

// GetPeeringDstVpcIdOk returns a tuple with the PeeringDstVpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetPeeringDstVpcIdOk() (*string, bool) {
	if o == nil || IsNil(o.PeeringDstVpcId) {
		return nil, false
	}
	return o.PeeringDstVpcId, true
}

// HasPeeringDstVpcId returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasPeeringDstVpcId() bool {
	if o != nil && !IsNil(o.PeeringDstVpcId) {
		return true
	}

	return false
}

// SetPeeringDstVpcId gets a reference to the given string and assigns it to the PeeringDstVpcId field.
func (o *TenantConnectionDTO) SetPeeringDstVpcId(v string) {
	o.PeeringDstVpcId = &v
}

// GetPeeringDstCidrList returns the PeeringDstCidrList field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetPeeringDstCidrList() string {
	if o == nil || IsNil(o.PeeringDstCidrList) {
		var ret string
		return ret
	}
	return *o.PeeringDstCidrList
}

// GetPeeringDstCidrListOk returns a tuple with the PeeringDstCidrList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetPeeringDstCidrListOk() (*string, bool) {
	if o == nil || IsNil(o.PeeringDstCidrList) {
		return nil, false
	}
	return o.PeeringDstCidrList, true
}

// HasPeeringDstCidrList returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasPeeringDstCidrList() bool {
	if o != nil && !IsNil(o.PeeringDstCidrList) {
		return true
	}

	return false
}

// SetPeeringDstCidrList gets a reference to the given string and assigns it to the PeeringDstCidrList field.
func (o *TenantConnectionDTO) SetPeeringDstCidrList(v string) {
	o.PeeringDstCidrList = &v
}

// GetPeeringId returns the PeeringId field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetPeeringId() string {
	if o == nil || IsNil(o.PeeringId) {
		var ret string
		return ret
	}
	return *o.PeeringId
}

// GetPeeringIdOk returns a tuple with the PeeringId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetPeeringIdOk() (*string, bool) {
	if o == nil || IsNil(o.PeeringId) {
		return nil, false
	}
	return o.PeeringId, true
}

// HasPeeringId returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasPeeringId() bool {
	if o != nil && !IsNil(o.PeeringId) {
		return true
	}

	return false
}

// SetPeeringId gets a reference to the given string and assigns it to the PeeringId field.
func (o *TenantConnectionDTO) SetPeeringId(v string) {
	o.PeeringId = &v
}

// GetUseSSL returns the UseSSL field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetUseSSL() bool {
	if o == nil || IsNil(o.UseSSL) {
		var ret bool
		return ret
	}
	return *o.UseSSL
}

// GetUseSSLOk returns a tuple with the UseSSL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetUseSSLOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSSL) {
		return nil, false
	}
	return o.UseSSL, true
}

// HasUseSSL returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasUseSSL() bool {
	if o != nil && !IsNil(o.UseSSL) {
		return true
	}

	return false
}

// SetUseSSL gets a reference to the given bool and assigns it to the UseSSL field.
func (o *TenantConnectionDTO) SetUseSSL(v bool) {
	o.UseSSL = &v
}

// GetProxyClusterId returns the ProxyClusterId field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetProxyClusterId() string {
	if o == nil || IsNil(o.ProxyClusterId) {
		var ret string
		return ret
	}
	return *o.ProxyClusterId
}

// GetProxyClusterIdOk returns a tuple with the ProxyClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetProxyClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyClusterId) {
		return nil, false
	}
	return o.ProxyClusterId, true
}

// HasProxyClusterId returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasProxyClusterId() bool {
	if o != nil && !IsNil(o.ProxyClusterId) {
		return true
	}

	return false
}

// SetProxyClusterId gets a reference to the given string and assigns it to the ProxyClusterId field.
func (o *TenantConnectionDTO) SetProxyClusterId(v string) {
	o.ProxyClusterId = &v
}

// GetMaxConnectionNum returns the MaxConnectionNum field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetMaxConnectionNum() int32 {
	if o == nil || IsNil(o.MaxConnectionNum) {
		var ret int32
		return ret
	}
	return *o.MaxConnectionNum
}

// GetMaxConnectionNumOk returns a tuple with the MaxConnectionNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetMaxConnectionNumOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxConnectionNum) {
		return nil, false
	}
	return o.MaxConnectionNum, true
}

// HasMaxConnectionNum returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasMaxConnectionNum() bool {
	if o != nil && !IsNil(o.MaxConnectionNum) {
		return true
	}

	return false
}

// SetMaxConnectionNum gets a reference to the given int32 and assigns it to the MaxConnectionNum field.
func (o *TenantConnectionDTO) SetMaxConnectionNum(v int32) {
	o.MaxConnectionNum = &v
}

// GetInternetMaxConnectionNum returns the InternetMaxConnectionNum field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetInternetMaxConnectionNum() int32 {
	if o == nil || IsNil(o.InternetMaxConnectionNum) {
		var ret int32
		return ret
	}
	return *o.InternetMaxConnectionNum
}

// GetInternetMaxConnectionNumOk returns a tuple with the InternetMaxConnectionNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetInternetMaxConnectionNumOk() (*int32, bool) {
	if o == nil || IsNil(o.InternetMaxConnectionNum) {
		return nil, false
	}
	return o.InternetMaxConnectionNum, true
}

// HasInternetMaxConnectionNum returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasInternetMaxConnectionNum() bool {
	if o != nil && !IsNil(o.InternetMaxConnectionNum) {
		return true
	}

	return false
}

// SetInternetMaxConnectionNum gets a reference to the given int32 and assigns it to the InternetMaxConnectionNum field.
func (o *TenantConnectionDTO) SetInternetMaxConnectionNum(v int32) {
	o.InternetMaxConnectionNum = &v
}

// GetIntranetPeeringMaxConnectionNum returns the IntranetPeeringMaxConnectionNum field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetIntranetPeeringMaxConnectionNum() int32 {
	if o == nil || IsNil(o.IntranetPeeringMaxConnectionNum) {
		var ret int32
		return ret
	}
	return *o.IntranetPeeringMaxConnectionNum
}

// GetIntranetPeeringMaxConnectionNumOk returns a tuple with the IntranetPeeringMaxConnectionNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetIntranetPeeringMaxConnectionNumOk() (*int32, bool) {
	if o == nil || IsNil(o.IntranetPeeringMaxConnectionNum) {
		return nil, false
	}
	return o.IntranetPeeringMaxConnectionNum, true
}

// HasIntranetPeeringMaxConnectionNum returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasIntranetPeeringMaxConnectionNum() bool {
	if o != nil && !IsNil(o.IntranetPeeringMaxConnectionNum) {
		return true
	}

	return false
}

// SetIntranetPeeringMaxConnectionNum gets a reference to the given int32 and assigns it to the IntranetPeeringMaxConnectionNum field.
func (o *TenantConnectionDTO) SetIntranetPeeringMaxConnectionNum(v int32) {
	o.IntranetPeeringMaxConnectionNum = &v
}

// GetEnableRPc returns the EnableRPc field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetEnableRPc() bool {
	if o == nil || IsNil(o.EnableRPc) {
		var ret bool
		return ret
	}
	return *o.EnableRPc
}

// GetEnableRPcOk returns a tuple with the EnableRPc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetEnableRPcOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableRPc) {
		return nil, false
	}
	return o.EnableRPc, true
}

// HasEnableRPc returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasEnableRPc() bool {
	if o != nil && !IsNil(o.EnableRPc) {
		return true
	}

	return false
}

// SetEnableRPc gets a reference to the given bool and assigns it to the EnableRPc field.
func (o *TenantConnectionDTO) SetEnableRPc(v bool) {
	o.EnableRPc = &v
}

// GetIntranetRpcPort returns the IntranetRpcPort field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetIntranetRpcPort() int32 {
	if o == nil || IsNil(o.IntranetRpcPort) {
		var ret int32
		return ret
	}
	return *o.IntranetRpcPort
}

// GetIntranetRpcPortOk returns a tuple with the IntranetRpcPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetIntranetRpcPortOk() (*int32, bool) {
	if o == nil || IsNil(o.IntranetRpcPort) {
		return nil, false
	}
	return o.IntranetRpcPort, true
}

// HasIntranetRpcPort returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasIntranetRpcPort() bool {
	if o != nil && !IsNil(o.IntranetRpcPort) {
		return true
	}

	return false
}

// SetIntranetRpcPort gets a reference to the given int32 and assigns it to the IntranetRpcPort field.
func (o *TenantConnectionDTO) SetIntranetRpcPort(v int32) {
	o.IntranetRpcPort = &v
}

// GetInternetRpcPort returns the InternetRpcPort field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetInternetRpcPort() int32 {
	if o == nil || IsNil(o.InternetRpcPort) {
		var ret int32
		return ret
	}
	return *o.InternetRpcPort
}

// GetInternetRpcPortOk returns a tuple with the InternetRpcPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetInternetRpcPortOk() (*int32, bool) {
	if o == nil || IsNil(o.InternetRpcPort) {
		return nil, false
	}
	return o.InternetRpcPort, true
}

// HasInternetRpcPort returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasInternetRpcPort() bool {
	if o != nil && !IsNil(o.InternetRpcPort) {
		return true
	}

	return false
}

// SetInternetRpcPort gets a reference to the given int32 and assigns it to the InternetRpcPort field.
func (o *TenantConnectionDTO) SetInternetRpcPort(v int32) {
	o.InternetRpcPort = &v
}

// GetProxyClusterInfo returns the ProxyClusterInfo field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetProxyClusterInfo() ProxyClusterInfoDTO {
	if o == nil || IsNil(o.ProxyClusterInfo) {
		var ret ProxyClusterInfoDTO
		return ret
	}
	return *o.ProxyClusterInfo
}

// GetProxyClusterInfoOk returns a tuple with the ProxyClusterInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetProxyClusterInfoOk() (*ProxyClusterInfoDTO, bool) {
	if o == nil || IsNil(o.ProxyClusterInfo) {
		return nil, false
	}
	return o.ProxyClusterInfo, true
}

// HasProxyClusterInfo returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasProxyClusterInfo() bool {
	if o != nil && !IsNil(o.ProxyClusterInfo) {
		return true
	}

	return false
}

// SetProxyClusterInfo gets a reference to the given ProxyClusterInfoDTO and assigns it to the ProxyClusterInfo field.
func (o *TenantConnectionDTO) SetProxyClusterInfo(v ProxyClusterInfoDTO) {
	o.ProxyClusterInfo = &v
}

// GetVswitchId returns the VswitchId field value if set, zero value otherwise.
func (o *TenantConnectionDTO) GetVswitchId() string {
	if o == nil || IsNil(o.VswitchId) {
		var ret string
		return ret
	}
	return *o.VswitchId
}

// GetVswitchIdOk returns a tuple with the VswitchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantConnectionDTO) GetVswitchIdOk() (*string, bool) {
	if o == nil || IsNil(o.VswitchId) {
		return nil, false
	}
	return o.VswitchId, true
}

// HasVswitchId returns a boolean if a field has been set.
func (o *TenantConnectionDTO) HasVswitchId() bool {
	if o != nil && !IsNil(o.VswitchId) {
		return true
	}

	return false
}

// SetVswitchId gets a reference to the given string and assigns it to the VswitchId field.
func (o *TenantConnectionDTO) SetVswitchId(v string) {
	o.VswitchId = &v
}

func (o TenantConnectionDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantConnectionDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.VpcId) {
		toSerialize["vpcId"] = o.VpcId
	}
	if !IsNil(o.UserVpcOwnerId) {
		toSerialize["userVpcOwnerId"] = o.UserVpcOwnerId
	}
	if !IsNil(o.AddressId) {
		toSerialize["addressId"] = o.AddressId
	}
	if !IsNil(o.ServiceType) {
		toSerialize["serviceType"] = o.ServiceType
	}
	if !IsNil(o.AddressType) {
		toSerialize["addressType"] = o.AddressType
	}
	if !IsNil(o.NetworkType) {
		toSerialize["networkType"] = o.NetworkType
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.IntranetAddress) {
		toSerialize["intranetAddress"] = o.IntranetAddress
	}
	if !IsNil(o.IntranetPort) {
		toSerialize["intranetPort"] = o.IntranetPort
	}
	if !IsNil(o.IntranetDomain) {
		toSerialize["intranetDomain"] = o.IntranetDomain
	}
	if !IsNil(o.IntranetAddressStatus) {
		toSerialize["intranetAddressStatus"] = o.IntranetAddressStatus
	}
	if !IsNil(o.InternetAddress) {
		toSerialize["internetAddress"] = o.InternetAddress
	}
	if !IsNil(o.InternetPort) {
		toSerialize["internetPort"] = o.InternetPort
	}
	if !IsNil(o.InternetDomain) {
		toSerialize["internetDomain"] = o.InternetDomain
	}
	if !IsNil(o.InternetAddressStatus) {
		toSerialize["internetAddressStatus"] = o.InternetAddressStatus
	}
	if !IsNil(o.IntranetPeeringAddress) {
		toSerialize["intranetPeeringAddress"] = o.IntranetPeeringAddress
	}
	if !IsNil(o.IntranetPeeringPort) {
		toSerialize["intranetPeeringPort"] = o.IntranetPeeringPort
	}
	if !IsNil(o.IntranetPeeringDomain) {
		toSerialize["intranetPeeringDomain"] = o.IntranetPeeringDomain
	}
	if !IsNil(o.IntranetPeeringAddressStatus) {
		toSerialize["intranetPeeringAddressStatus"] = o.IntranetPeeringAddressStatus
	}
	if !IsNil(o.IntranetAddressMasterZoneId) {
		toSerialize["intranetAddressMasterZoneId"] = o.IntranetAddressMasterZoneId
	}
	if !IsNil(o.IntranetAddressSlaveZoneId) {
		toSerialize["intranetAddressSlaveZoneId"] = o.IntranetAddressSlaveZoneId
	}
	if !IsNil(o.ConnectionZones) {
		toSerialize["connectionZones"] = o.ConnectionZones
	}
	if !IsNil(o.AddressStatus) {
		toSerialize["addressStatus"] = o.AddressStatus
	}
	if !IsNil(o.UserNameFormat) {
		toSerialize["userNameFormat"] = o.UserNameFormat
	}
	if !IsNil(o.PrivateLinkList) {
		toSerialize["privateLinkList"] = o.PrivateLinkList
	}
	if !IsNil(o.PeeringDstVpcId) {
		toSerialize["peeringDstVpcId"] = o.PeeringDstVpcId
	}
	if !IsNil(o.PeeringDstCidrList) {
		toSerialize["peeringDstCidrList"] = o.PeeringDstCidrList
	}
	if !IsNil(o.PeeringId) {
		toSerialize["peeringId"] = o.PeeringId
	}
	if !IsNil(o.UseSSL) {
		toSerialize["useSSL"] = o.UseSSL
	}
	if !IsNil(o.ProxyClusterId) {
		toSerialize["proxyClusterId"] = o.ProxyClusterId
	}
	if !IsNil(o.MaxConnectionNum) {
		toSerialize["maxConnectionNum"] = o.MaxConnectionNum
	}
	if !IsNil(o.InternetMaxConnectionNum) {
		toSerialize["internetMaxConnectionNum"] = o.InternetMaxConnectionNum
	}
	if !IsNil(o.IntranetPeeringMaxConnectionNum) {
		toSerialize["intranetPeeringMaxConnectionNum"] = o.IntranetPeeringMaxConnectionNum
	}
	if !IsNil(o.EnableRPc) {
		toSerialize["enableRPc"] = o.EnableRPc
	}
	if !IsNil(o.IntranetRpcPort) {
		toSerialize["intranetRpcPort"] = o.IntranetRpcPort
	}
	if !IsNil(o.InternetRpcPort) {
		toSerialize["internetRpcPort"] = o.InternetRpcPort
	}
	if !IsNil(o.ProxyClusterInfo) {
		toSerialize["proxyClusterInfo"] = o.ProxyClusterInfo
	}
	if !IsNil(o.VswitchId) {
		toSerialize["vswitchId"] = o.VswitchId
	}
	return toSerialize, nil
}

type NullableTenantConnectionDTO struct {
	value *TenantConnectionDTO
	isSet bool
}

func (v NullableTenantConnectionDTO) Get() *TenantConnectionDTO {
	return v.value
}

func (v *NullableTenantConnectionDTO) Set(val *TenantConnectionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantConnectionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantConnectionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantConnectionDTO(val *TenantConnectionDTO) *NullableTenantConnectionDTO {
	return &NullableTenantConnectionDTO{value: val, isSet: true}
}

func (v NullableTenantConnectionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantConnectionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


