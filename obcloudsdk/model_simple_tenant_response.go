/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the SimpleTenantResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SimpleTenantResponse{}

// SimpleTenantResponse struct for SimpleTenantResponse
type SimpleTenantResponse struct {
	TenantId *string `json:"tenantId,omitempty"`
	JobKey *string `json:"jobKey,omitempty"`
}

// NewSimpleTenantResponse instantiates a new SimpleTenantResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimpleTenantResponse() *SimpleTenantResponse {
	this := SimpleTenantResponse{}
	return &this
}

// NewSimpleTenantResponseWithDefaults instantiates a new SimpleTenantResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimpleTenantResponseWithDefaults() *SimpleTenantResponse {
	this := SimpleTenantResponse{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *SimpleTenantResponse) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleTenantResponse) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *SimpleTenantResponse) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *SimpleTenantResponse) SetTenantId(v string) {
	o.TenantId = &v
}

// GetJobKey returns the JobKey field value if set, zero value otherwise.
func (o *SimpleTenantResponse) GetJobKey() string {
	if o == nil || IsNil(o.JobKey) {
		var ret string
		return ret
	}
	return *o.JobKey
}

// GetJobKeyOk returns a tuple with the JobKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleTenantResponse) GetJobKeyOk() (*string, bool) {
	if o == nil || IsNil(o.JobKey) {
		return nil, false
	}
	return o.JobKey, true
}

// HasJobKey returns a boolean if a field has been set.
func (o *SimpleTenantResponse) HasJobKey() bool {
	if o != nil && !IsNil(o.JobKey) {
		return true
	}

	return false
}

// SetJobKey gets a reference to the given string and assigns it to the JobKey field.
func (o *SimpleTenantResponse) SetJobKey(v string) {
	o.JobKey = &v
}

func (o SimpleTenantResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SimpleTenantResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.JobKey) {
		toSerialize["jobKey"] = o.JobKey
	}
	return toSerialize, nil
}

type NullableSimpleTenantResponse struct {
	value *SimpleTenantResponse
	isSet bool
}

func (v NullableSimpleTenantResponse) Get() *SimpleTenantResponse {
	return v.value
}

func (v *NullableSimpleTenantResponse) Set(val *SimpleTenantResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSimpleTenantResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSimpleTenantResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimpleTenantResponse(val *SimpleTenantResponse) *NullableSimpleTenantResponse {
	return &NullableSimpleTenantResponse{value: val, isSet: true}
}

func (v NullableSimpleTenantResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimpleTenantResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


