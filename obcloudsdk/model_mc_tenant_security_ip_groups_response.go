/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the McTenantSecurityIpGroupsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &McTenantSecurityIpGroupsResponse{}

// McTenantSecurityIpGroupsResponse struct for McTenantSecurityIpGroupsResponse
type McTenantSecurityIpGroupsResponse struct {
	TenantId *string `json:"tenantId,omitempty"`
	SecurityIpGroupType *string `json:"securityIpGroupType,omitempty"`
	SecurityIpGroupName *string `json:"securityIpGroupName,omitempty"`
	SecurityIps *string `json:"securityIps,omitempty"`
}

// NewMcTenantSecurityIpGroupsResponse instantiates a new McTenantSecurityIpGroupsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcTenantSecurityIpGroupsResponse() *McTenantSecurityIpGroupsResponse {
	this := McTenantSecurityIpGroupsResponse{}
	return &this
}

// NewMcTenantSecurityIpGroupsResponseWithDefaults instantiates a new McTenantSecurityIpGroupsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcTenantSecurityIpGroupsResponseWithDefaults() *McTenantSecurityIpGroupsResponse {
	this := McTenantSecurityIpGroupsResponse{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *McTenantSecurityIpGroupsResponse) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McTenantSecurityIpGroupsResponse) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *McTenantSecurityIpGroupsResponse) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *McTenantSecurityIpGroupsResponse) SetTenantId(v string) {
	o.TenantId = &v
}

// GetSecurityIpGroupType returns the SecurityIpGroupType field value if set, zero value otherwise.
func (o *McTenantSecurityIpGroupsResponse) GetSecurityIpGroupType() string {
	if o == nil || IsNil(o.SecurityIpGroupType) {
		var ret string
		return ret
	}
	return *o.SecurityIpGroupType
}

// GetSecurityIpGroupTypeOk returns a tuple with the SecurityIpGroupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McTenantSecurityIpGroupsResponse) GetSecurityIpGroupTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityIpGroupType) {
		return nil, false
	}
	return o.SecurityIpGroupType, true
}

// HasSecurityIpGroupType returns a boolean if a field has been set.
func (o *McTenantSecurityIpGroupsResponse) HasSecurityIpGroupType() bool {
	if o != nil && !IsNil(o.SecurityIpGroupType) {
		return true
	}

	return false
}

// SetSecurityIpGroupType gets a reference to the given string and assigns it to the SecurityIpGroupType field.
func (o *McTenantSecurityIpGroupsResponse) SetSecurityIpGroupType(v string) {
	o.SecurityIpGroupType = &v
}

// GetSecurityIpGroupName returns the SecurityIpGroupName field value if set, zero value otherwise.
func (o *McTenantSecurityIpGroupsResponse) GetSecurityIpGroupName() string {
	if o == nil || IsNil(o.SecurityIpGroupName) {
		var ret string
		return ret
	}
	return *o.SecurityIpGroupName
}

// GetSecurityIpGroupNameOk returns a tuple with the SecurityIpGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McTenantSecurityIpGroupsResponse) GetSecurityIpGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityIpGroupName) {
		return nil, false
	}
	return o.SecurityIpGroupName, true
}

// HasSecurityIpGroupName returns a boolean if a field has been set.
func (o *McTenantSecurityIpGroupsResponse) HasSecurityIpGroupName() bool {
	if o != nil && !IsNil(o.SecurityIpGroupName) {
		return true
	}

	return false
}

// SetSecurityIpGroupName gets a reference to the given string and assigns it to the SecurityIpGroupName field.
func (o *McTenantSecurityIpGroupsResponse) SetSecurityIpGroupName(v string) {
	o.SecurityIpGroupName = &v
}

// GetSecurityIps returns the SecurityIps field value if set, zero value otherwise.
func (o *McTenantSecurityIpGroupsResponse) GetSecurityIps() string {
	if o == nil || IsNil(o.SecurityIps) {
		var ret string
		return ret
	}
	return *o.SecurityIps
}

// GetSecurityIpsOk returns a tuple with the SecurityIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McTenantSecurityIpGroupsResponse) GetSecurityIpsOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityIps) {
		return nil, false
	}
	return o.SecurityIps, true
}

// HasSecurityIps returns a boolean if a field has been set.
func (o *McTenantSecurityIpGroupsResponse) HasSecurityIps() bool {
	if o != nil && !IsNil(o.SecurityIps) {
		return true
	}

	return false
}

// SetSecurityIps gets a reference to the given string and assigns it to the SecurityIps field.
func (o *McTenantSecurityIpGroupsResponse) SetSecurityIps(v string) {
	o.SecurityIps = &v
}

func (o McTenantSecurityIpGroupsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o McTenantSecurityIpGroupsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.SecurityIpGroupType) {
		toSerialize["securityIpGroupType"] = o.SecurityIpGroupType
	}
	if !IsNil(o.SecurityIpGroupName) {
		toSerialize["securityIpGroupName"] = o.SecurityIpGroupName
	}
	if !IsNil(o.SecurityIps) {
		toSerialize["securityIps"] = o.SecurityIps
	}
	return toSerialize, nil
}

type NullableMcTenantSecurityIpGroupsResponse struct {
	value *McTenantSecurityIpGroupsResponse
	isSet bool
}

func (v NullableMcTenantSecurityIpGroupsResponse) Get() *McTenantSecurityIpGroupsResponse {
	return v.value
}

func (v *NullableMcTenantSecurityIpGroupsResponse) Set(val *McTenantSecurityIpGroupsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMcTenantSecurityIpGroupsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMcTenantSecurityIpGroupsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcTenantSecurityIpGroupsResponse(val *McTenantSecurityIpGroupsResponse) *NullableMcTenantSecurityIpGroupsResponse {
	return &NullableMcTenantSecurityIpGroupsResponse{value: val, isSet: true}
}

func (v NullableMcTenantSecurityIpGroupsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcTenantSecurityIpGroupsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


