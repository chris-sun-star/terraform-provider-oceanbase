/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the TenantDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantDTO{}

// TenantDTO struct for TenantDTO
type TenantDTO struct {
	TenantId *string `json:"tenantId,omitempty"`
	OcpTenantId *int64 `json:"ocpTenantId,omitempty"`
	TenantName *string `json:"tenantName,omitempty"`
	ManagementMode *string `json:"managementMode,omitempty"`
	GmtCreate *string `json:"gmtCreate,omitempty"`
	CreateTime *string `json:"createTime,omitempty"`
	TenantMode *string `json:"tenantMode,omitempty"`
	PrimaryRegion *string `json:"primaryRegion,omitempty"`
	PrimaryZone *string `json:"primaryZone,omitempty"`
	Status *string `json:"status,omitempty"`
	Cpu *int32 `json:"cpu,omitempty"`
	Mem *int32 `json:"mem,omitempty"`
	UnitCpu *int32 `json:"unitCpu,omitempty"`
	UnitMem *int32 `json:"unitMem,omitempty"`
	UnitNum *int32 `json:"unitNum,omitempty"`
	VpcId *string `json:"vpcId,omitempty"`
	DeployType *string `json:"deployType,omitempty"`
	Description *string `json:"description,omitempty"`
	TenantConnections []TenantConnectionDTO `json:"tenantConnections,omitempty"`
	TenantZones []TenantZoneDTO `json:"tenantZones,omitempty"`
	TenantResource *TenantResourceDTO `json:"tenantResource,omitempty"`
	EnableBinlogService *bool `json:"enableBinlogService,omitempty"`
	ReadonlyConnectionAddable *string `json:"readonlyConnectionAddable,omitempty"`
	TimeZone *string `json:"timeZone,omitempty"`
	Charset *string `json:"charset,omitempty"`
	LowerCaseTableNamesParam *int32 `json:"lowerCaseTableNamesParam,omitempty"`
	TagList []TagKeyValueDo `json:"tagList,omitempty"`
	TenantCompatibilityMode *string `json:"tenantCompatibilityMode,omitempty"`
	DataMergeTime *string `json:"dataMergeTime,omitempty"`
	EnableProxyPublicLink *bool `json:"enableProxyPublicLink,omitempty"`
}

// NewTenantDTO instantiates a new TenantDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantDTO() *TenantDTO {
	this := TenantDTO{}
	return &this
}

// NewTenantDTOWithDefaults instantiates a new TenantDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantDTOWithDefaults() *TenantDTO {
	this := TenantDTO{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *TenantDTO) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *TenantDTO) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *TenantDTO) SetTenantId(v string) {
	o.TenantId = &v
}

// GetOcpTenantId returns the OcpTenantId field value if set, zero value otherwise.
func (o *TenantDTO) GetOcpTenantId() int64 {
	if o == nil || IsNil(o.OcpTenantId) {
		var ret int64
		return ret
	}
	return *o.OcpTenantId
}

// GetOcpTenantIdOk returns a tuple with the OcpTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetOcpTenantIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OcpTenantId) {
		return nil, false
	}
	return o.OcpTenantId, true
}

// HasOcpTenantId returns a boolean if a field has been set.
func (o *TenantDTO) HasOcpTenantId() bool {
	if o != nil && !IsNil(o.OcpTenantId) {
		return true
	}

	return false
}

// SetOcpTenantId gets a reference to the given int64 and assigns it to the OcpTenantId field.
func (o *TenantDTO) SetOcpTenantId(v int64) {
	o.OcpTenantId = &v
}

// GetTenantName returns the TenantName field value if set, zero value otherwise.
func (o *TenantDTO) GetTenantName() string {
	if o == nil || IsNil(o.TenantName) {
		var ret string
		return ret
	}
	return *o.TenantName
}

// GetTenantNameOk returns a tuple with the TenantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetTenantNameOk() (*string, bool) {
	if o == nil || IsNil(o.TenantName) {
		return nil, false
	}
	return o.TenantName, true
}

// HasTenantName returns a boolean if a field has been set.
func (o *TenantDTO) HasTenantName() bool {
	if o != nil && !IsNil(o.TenantName) {
		return true
	}

	return false
}

// SetTenantName gets a reference to the given string and assigns it to the TenantName field.
func (o *TenantDTO) SetTenantName(v string) {
	o.TenantName = &v
}

// GetManagementMode returns the ManagementMode field value if set, zero value otherwise.
func (o *TenantDTO) GetManagementMode() string {
	if o == nil || IsNil(o.ManagementMode) {
		var ret string
		return ret
	}
	return *o.ManagementMode
}

// GetManagementModeOk returns a tuple with the ManagementMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetManagementModeOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementMode) {
		return nil, false
	}
	return o.ManagementMode, true
}

// HasManagementMode returns a boolean if a field has been set.
func (o *TenantDTO) HasManagementMode() bool {
	if o != nil && !IsNil(o.ManagementMode) {
		return true
	}

	return false
}

// SetManagementMode gets a reference to the given string and assigns it to the ManagementMode field.
func (o *TenantDTO) SetManagementMode(v string) {
	o.ManagementMode = &v
}

// GetGmtCreate returns the GmtCreate field value if set, zero value otherwise.
func (o *TenantDTO) GetGmtCreate() string {
	if o == nil || IsNil(o.GmtCreate) {
		var ret string
		return ret
	}
	return *o.GmtCreate
}

// GetGmtCreateOk returns a tuple with the GmtCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetGmtCreateOk() (*string, bool) {
	if o == nil || IsNil(o.GmtCreate) {
		return nil, false
	}
	return o.GmtCreate, true
}

// HasGmtCreate returns a boolean if a field has been set.
func (o *TenantDTO) HasGmtCreate() bool {
	if o != nil && !IsNil(o.GmtCreate) {
		return true
	}

	return false
}

// SetGmtCreate gets a reference to the given string and assigns it to the GmtCreate field.
func (o *TenantDTO) SetGmtCreate(v string) {
	o.GmtCreate = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *TenantDTO) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *TenantDTO) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *TenantDTO) SetCreateTime(v string) {
	o.CreateTime = &v
}

// GetTenantMode returns the TenantMode field value if set, zero value otherwise.
func (o *TenantDTO) GetTenantMode() string {
	if o == nil || IsNil(o.TenantMode) {
		var ret string
		return ret
	}
	return *o.TenantMode
}

// GetTenantModeOk returns a tuple with the TenantMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetTenantModeOk() (*string, bool) {
	if o == nil || IsNil(o.TenantMode) {
		return nil, false
	}
	return o.TenantMode, true
}

// HasTenantMode returns a boolean if a field has been set.
func (o *TenantDTO) HasTenantMode() bool {
	if o != nil && !IsNil(o.TenantMode) {
		return true
	}

	return false
}

// SetTenantMode gets a reference to the given string and assigns it to the TenantMode field.
func (o *TenantDTO) SetTenantMode(v string) {
	o.TenantMode = &v
}

// GetPrimaryRegion returns the PrimaryRegion field value if set, zero value otherwise.
func (o *TenantDTO) GetPrimaryRegion() string {
	if o == nil || IsNil(o.PrimaryRegion) {
		var ret string
		return ret
	}
	return *o.PrimaryRegion
}

// GetPrimaryRegionOk returns a tuple with the PrimaryRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetPrimaryRegionOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryRegion) {
		return nil, false
	}
	return o.PrimaryRegion, true
}

// HasPrimaryRegion returns a boolean if a field has been set.
func (o *TenantDTO) HasPrimaryRegion() bool {
	if o != nil && !IsNil(o.PrimaryRegion) {
		return true
	}

	return false
}

// SetPrimaryRegion gets a reference to the given string and assigns it to the PrimaryRegion field.
func (o *TenantDTO) SetPrimaryRegion(v string) {
	o.PrimaryRegion = &v
}

// GetPrimaryZone returns the PrimaryZone field value if set, zero value otherwise.
func (o *TenantDTO) GetPrimaryZone() string {
	if o == nil || IsNil(o.PrimaryZone) {
		var ret string
		return ret
	}
	return *o.PrimaryZone
}

// GetPrimaryZoneOk returns a tuple with the PrimaryZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetPrimaryZoneOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryZone) {
		return nil, false
	}
	return o.PrimaryZone, true
}

// HasPrimaryZone returns a boolean if a field has been set.
func (o *TenantDTO) HasPrimaryZone() bool {
	if o != nil && !IsNil(o.PrimaryZone) {
		return true
	}

	return false
}

// SetPrimaryZone gets a reference to the given string and assigns it to the PrimaryZone field.
func (o *TenantDTO) SetPrimaryZone(v string) {
	o.PrimaryZone = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TenantDTO) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TenantDTO) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TenantDTO) SetStatus(v string) {
	o.Status = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *TenantDTO) GetCpu() int32 {
	if o == nil || IsNil(o.Cpu) {
		var ret int32
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetCpuOk() (*int32, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *TenantDTO) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given int32 and assigns it to the Cpu field.
func (o *TenantDTO) SetCpu(v int32) {
	o.Cpu = &v
}

// GetMem returns the Mem field value if set, zero value otherwise.
func (o *TenantDTO) GetMem() int32 {
	if o == nil || IsNil(o.Mem) {
		var ret int32
		return ret
	}
	return *o.Mem
}

// GetMemOk returns a tuple with the Mem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetMemOk() (*int32, bool) {
	if o == nil || IsNil(o.Mem) {
		return nil, false
	}
	return o.Mem, true
}

// HasMem returns a boolean if a field has been set.
func (o *TenantDTO) HasMem() bool {
	if o != nil && !IsNil(o.Mem) {
		return true
	}

	return false
}

// SetMem gets a reference to the given int32 and assigns it to the Mem field.
func (o *TenantDTO) SetMem(v int32) {
	o.Mem = &v
}

// GetUnitCpu returns the UnitCpu field value if set, zero value otherwise.
func (o *TenantDTO) GetUnitCpu() int32 {
	if o == nil || IsNil(o.UnitCpu) {
		var ret int32
		return ret
	}
	return *o.UnitCpu
}

// GetUnitCpuOk returns a tuple with the UnitCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetUnitCpuOk() (*int32, bool) {
	if o == nil || IsNil(o.UnitCpu) {
		return nil, false
	}
	return o.UnitCpu, true
}

// HasUnitCpu returns a boolean if a field has been set.
func (o *TenantDTO) HasUnitCpu() bool {
	if o != nil && !IsNil(o.UnitCpu) {
		return true
	}

	return false
}

// SetUnitCpu gets a reference to the given int32 and assigns it to the UnitCpu field.
func (o *TenantDTO) SetUnitCpu(v int32) {
	o.UnitCpu = &v
}

// GetUnitMem returns the UnitMem field value if set, zero value otherwise.
func (o *TenantDTO) GetUnitMem() int32 {
	if o == nil || IsNil(o.UnitMem) {
		var ret int32
		return ret
	}
	return *o.UnitMem
}

// GetUnitMemOk returns a tuple with the UnitMem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetUnitMemOk() (*int32, bool) {
	if o == nil || IsNil(o.UnitMem) {
		return nil, false
	}
	return o.UnitMem, true
}

// HasUnitMem returns a boolean if a field has been set.
func (o *TenantDTO) HasUnitMem() bool {
	if o != nil && !IsNil(o.UnitMem) {
		return true
	}

	return false
}

// SetUnitMem gets a reference to the given int32 and assigns it to the UnitMem field.
func (o *TenantDTO) SetUnitMem(v int32) {
	o.UnitMem = &v
}

// GetUnitNum returns the UnitNum field value if set, zero value otherwise.
func (o *TenantDTO) GetUnitNum() int32 {
	if o == nil || IsNil(o.UnitNum) {
		var ret int32
		return ret
	}
	return *o.UnitNum
}

// GetUnitNumOk returns a tuple with the UnitNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetUnitNumOk() (*int32, bool) {
	if o == nil || IsNil(o.UnitNum) {
		return nil, false
	}
	return o.UnitNum, true
}

// HasUnitNum returns a boolean if a field has been set.
func (o *TenantDTO) HasUnitNum() bool {
	if o != nil && !IsNil(o.UnitNum) {
		return true
	}

	return false
}

// SetUnitNum gets a reference to the given int32 and assigns it to the UnitNum field.
func (o *TenantDTO) SetUnitNum(v int32) {
	o.UnitNum = &v
}

// GetVpcId returns the VpcId field value if set, zero value otherwise.
func (o *TenantDTO) GetVpcId() string {
	if o == nil || IsNil(o.VpcId) {
		var ret string
		return ret
	}
	return *o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetVpcIdOk() (*string, bool) {
	if o == nil || IsNil(o.VpcId) {
		return nil, false
	}
	return o.VpcId, true
}

// HasVpcId returns a boolean if a field has been set.
func (o *TenantDTO) HasVpcId() bool {
	if o != nil && !IsNil(o.VpcId) {
		return true
	}

	return false
}

// SetVpcId gets a reference to the given string and assigns it to the VpcId field.
func (o *TenantDTO) SetVpcId(v string) {
	o.VpcId = &v
}

// GetDeployType returns the DeployType field value if set, zero value otherwise.
func (o *TenantDTO) GetDeployType() string {
	if o == nil || IsNil(o.DeployType) {
		var ret string
		return ret
	}
	return *o.DeployType
}

// GetDeployTypeOk returns a tuple with the DeployType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetDeployTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeployType) {
		return nil, false
	}
	return o.DeployType, true
}

// HasDeployType returns a boolean if a field has been set.
func (o *TenantDTO) HasDeployType() bool {
	if o != nil && !IsNil(o.DeployType) {
		return true
	}

	return false
}

// SetDeployType gets a reference to the given string and assigns it to the DeployType field.
func (o *TenantDTO) SetDeployType(v string) {
	o.DeployType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TenantDTO) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TenantDTO) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TenantDTO) SetDescription(v string) {
	o.Description = &v
}

// GetTenantConnections returns the TenantConnections field value if set, zero value otherwise.
func (o *TenantDTO) GetTenantConnections() []TenantConnectionDTO {
	if o == nil || IsNil(o.TenantConnections) {
		var ret []TenantConnectionDTO
		return ret
	}
	return o.TenantConnections
}

// GetTenantConnectionsOk returns a tuple with the TenantConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetTenantConnectionsOk() ([]TenantConnectionDTO, bool) {
	if o == nil || IsNil(o.TenantConnections) {
		return nil, false
	}
	return o.TenantConnections, true
}

// HasTenantConnections returns a boolean if a field has been set.
func (o *TenantDTO) HasTenantConnections() bool {
	if o != nil && !IsNil(o.TenantConnections) {
		return true
	}

	return false
}

// SetTenantConnections gets a reference to the given []TenantConnectionDTO and assigns it to the TenantConnections field.
func (o *TenantDTO) SetTenantConnections(v []TenantConnectionDTO) {
	o.TenantConnections = v
}

// GetTenantZones returns the TenantZones field value if set, zero value otherwise.
func (o *TenantDTO) GetTenantZones() []TenantZoneDTO {
	if o == nil || IsNil(o.TenantZones) {
		var ret []TenantZoneDTO
		return ret
	}
	return o.TenantZones
}

// GetTenantZonesOk returns a tuple with the TenantZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetTenantZonesOk() ([]TenantZoneDTO, bool) {
	if o == nil || IsNil(o.TenantZones) {
		return nil, false
	}
	return o.TenantZones, true
}

// HasTenantZones returns a boolean if a field has been set.
func (o *TenantDTO) HasTenantZones() bool {
	if o != nil && !IsNil(o.TenantZones) {
		return true
	}

	return false
}

// SetTenantZones gets a reference to the given []TenantZoneDTO and assigns it to the TenantZones field.
func (o *TenantDTO) SetTenantZones(v []TenantZoneDTO) {
	o.TenantZones = v
}

// GetTenantResource returns the TenantResource field value if set, zero value otherwise.
func (o *TenantDTO) GetTenantResource() TenantResourceDTO {
	if o == nil || IsNil(o.TenantResource) {
		var ret TenantResourceDTO
		return ret
	}
	return *o.TenantResource
}

// GetTenantResourceOk returns a tuple with the TenantResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetTenantResourceOk() (*TenantResourceDTO, bool) {
	if o == nil || IsNil(o.TenantResource) {
		return nil, false
	}
	return o.TenantResource, true
}

// HasTenantResource returns a boolean if a field has been set.
func (o *TenantDTO) HasTenantResource() bool {
	if o != nil && !IsNil(o.TenantResource) {
		return true
	}

	return false
}

// SetTenantResource gets a reference to the given TenantResourceDTO and assigns it to the TenantResource field.
func (o *TenantDTO) SetTenantResource(v TenantResourceDTO) {
	o.TenantResource = &v
}

// GetEnableBinlogService returns the EnableBinlogService field value if set, zero value otherwise.
func (o *TenantDTO) GetEnableBinlogService() bool {
	if o == nil || IsNil(o.EnableBinlogService) {
		var ret bool
		return ret
	}
	return *o.EnableBinlogService
}

// GetEnableBinlogServiceOk returns a tuple with the EnableBinlogService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetEnableBinlogServiceOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableBinlogService) {
		return nil, false
	}
	return o.EnableBinlogService, true
}

// HasEnableBinlogService returns a boolean if a field has been set.
func (o *TenantDTO) HasEnableBinlogService() bool {
	if o != nil && !IsNil(o.EnableBinlogService) {
		return true
	}

	return false
}

// SetEnableBinlogService gets a reference to the given bool and assigns it to the EnableBinlogService field.
func (o *TenantDTO) SetEnableBinlogService(v bool) {
	o.EnableBinlogService = &v
}

// GetReadonlyConnectionAddable returns the ReadonlyConnectionAddable field value if set, zero value otherwise.
func (o *TenantDTO) GetReadonlyConnectionAddable() string {
	if o == nil || IsNil(o.ReadonlyConnectionAddable) {
		var ret string
		return ret
	}
	return *o.ReadonlyConnectionAddable
}

// GetReadonlyConnectionAddableOk returns a tuple with the ReadonlyConnectionAddable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetReadonlyConnectionAddableOk() (*string, bool) {
	if o == nil || IsNil(o.ReadonlyConnectionAddable) {
		return nil, false
	}
	return o.ReadonlyConnectionAddable, true
}

// HasReadonlyConnectionAddable returns a boolean if a field has been set.
func (o *TenantDTO) HasReadonlyConnectionAddable() bool {
	if o != nil && !IsNil(o.ReadonlyConnectionAddable) {
		return true
	}

	return false
}

// SetReadonlyConnectionAddable gets a reference to the given string and assigns it to the ReadonlyConnectionAddable field.
func (o *TenantDTO) SetReadonlyConnectionAddable(v string) {
	o.ReadonlyConnectionAddable = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *TenantDTO) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *TenantDTO) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *TenantDTO) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetCharset returns the Charset field value if set, zero value otherwise.
func (o *TenantDTO) GetCharset() string {
	if o == nil || IsNil(o.Charset) {
		var ret string
		return ret
	}
	return *o.Charset
}

// GetCharsetOk returns a tuple with the Charset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetCharsetOk() (*string, bool) {
	if o == nil || IsNil(o.Charset) {
		return nil, false
	}
	return o.Charset, true
}

// HasCharset returns a boolean if a field has been set.
func (o *TenantDTO) HasCharset() bool {
	if o != nil && !IsNil(o.Charset) {
		return true
	}

	return false
}

// SetCharset gets a reference to the given string and assigns it to the Charset field.
func (o *TenantDTO) SetCharset(v string) {
	o.Charset = &v
}

// GetLowerCaseTableNamesParam returns the LowerCaseTableNamesParam field value if set, zero value otherwise.
func (o *TenantDTO) GetLowerCaseTableNamesParam() int32 {
	if o == nil || IsNil(o.LowerCaseTableNamesParam) {
		var ret int32
		return ret
	}
	return *o.LowerCaseTableNamesParam
}

// GetLowerCaseTableNamesParamOk returns a tuple with the LowerCaseTableNamesParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetLowerCaseTableNamesParamOk() (*int32, bool) {
	if o == nil || IsNil(o.LowerCaseTableNamesParam) {
		return nil, false
	}
	return o.LowerCaseTableNamesParam, true
}

// HasLowerCaseTableNamesParam returns a boolean if a field has been set.
func (o *TenantDTO) HasLowerCaseTableNamesParam() bool {
	if o != nil && !IsNil(o.LowerCaseTableNamesParam) {
		return true
	}

	return false
}

// SetLowerCaseTableNamesParam gets a reference to the given int32 and assigns it to the LowerCaseTableNamesParam field.
func (o *TenantDTO) SetLowerCaseTableNamesParam(v int32) {
	o.LowerCaseTableNamesParam = &v
}

// GetTagList returns the TagList field value if set, zero value otherwise.
func (o *TenantDTO) GetTagList() []TagKeyValueDo {
	if o == nil || IsNil(o.TagList) {
		var ret []TagKeyValueDo
		return ret
	}
	return o.TagList
}

// GetTagListOk returns a tuple with the TagList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetTagListOk() ([]TagKeyValueDo, bool) {
	if o == nil || IsNil(o.TagList) {
		return nil, false
	}
	return o.TagList, true
}

// HasTagList returns a boolean if a field has been set.
func (o *TenantDTO) HasTagList() bool {
	if o != nil && !IsNil(o.TagList) {
		return true
	}

	return false
}

// SetTagList gets a reference to the given []TagKeyValueDo and assigns it to the TagList field.
func (o *TenantDTO) SetTagList(v []TagKeyValueDo) {
	o.TagList = v
}

// GetTenantCompatibilityMode returns the TenantCompatibilityMode field value if set, zero value otherwise.
func (o *TenantDTO) GetTenantCompatibilityMode() string {
	if o == nil || IsNil(o.TenantCompatibilityMode) {
		var ret string
		return ret
	}
	return *o.TenantCompatibilityMode
}

// GetTenantCompatibilityModeOk returns a tuple with the TenantCompatibilityMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetTenantCompatibilityModeOk() (*string, bool) {
	if o == nil || IsNil(o.TenantCompatibilityMode) {
		return nil, false
	}
	return o.TenantCompatibilityMode, true
}

// HasTenantCompatibilityMode returns a boolean if a field has been set.
func (o *TenantDTO) HasTenantCompatibilityMode() bool {
	if o != nil && !IsNil(o.TenantCompatibilityMode) {
		return true
	}

	return false
}

// SetTenantCompatibilityMode gets a reference to the given string and assigns it to the TenantCompatibilityMode field.
func (o *TenantDTO) SetTenantCompatibilityMode(v string) {
	o.TenantCompatibilityMode = &v
}

// GetDataMergeTime returns the DataMergeTime field value if set, zero value otherwise.
func (o *TenantDTO) GetDataMergeTime() string {
	if o == nil || IsNil(o.DataMergeTime) {
		var ret string
		return ret
	}
	return *o.DataMergeTime
}

// GetDataMergeTimeOk returns a tuple with the DataMergeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetDataMergeTimeOk() (*string, bool) {
	if o == nil || IsNil(o.DataMergeTime) {
		return nil, false
	}
	return o.DataMergeTime, true
}

// HasDataMergeTime returns a boolean if a field has been set.
func (o *TenantDTO) HasDataMergeTime() bool {
	if o != nil && !IsNil(o.DataMergeTime) {
		return true
	}

	return false
}

// SetDataMergeTime gets a reference to the given string and assigns it to the DataMergeTime field.
func (o *TenantDTO) SetDataMergeTime(v string) {
	o.DataMergeTime = &v
}

// GetEnableProxyPublicLink returns the EnableProxyPublicLink field value if set, zero value otherwise.
func (o *TenantDTO) GetEnableProxyPublicLink() bool {
	if o == nil || IsNil(o.EnableProxyPublicLink) {
		var ret bool
		return ret
	}
	return *o.EnableProxyPublicLink
}

// GetEnableProxyPublicLinkOk returns a tuple with the EnableProxyPublicLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantDTO) GetEnableProxyPublicLinkOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableProxyPublicLink) {
		return nil, false
	}
	return o.EnableProxyPublicLink, true
}

// HasEnableProxyPublicLink returns a boolean if a field has been set.
func (o *TenantDTO) HasEnableProxyPublicLink() bool {
	if o != nil && !IsNil(o.EnableProxyPublicLink) {
		return true
	}

	return false
}

// SetEnableProxyPublicLink gets a reference to the given bool and assigns it to the EnableProxyPublicLink field.
func (o *TenantDTO) SetEnableProxyPublicLink(v bool) {
	o.EnableProxyPublicLink = &v
}

func (o TenantDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.OcpTenantId) {
		toSerialize["ocpTenantId"] = o.OcpTenantId
	}
	if !IsNil(o.TenantName) {
		toSerialize["tenantName"] = o.TenantName
	}
	if !IsNil(o.ManagementMode) {
		toSerialize["managementMode"] = o.ManagementMode
	}
	if !IsNil(o.GmtCreate) {
		toSerialize["gmtCreate"] = o.GmtCreate
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.TenantMode) {
		toSerialize["tenantMode"] = o.TenantMode
	}
	if !IsNil(o.PrimaryRegion) {
		toSerialize["primaryRegion"] = o.PrimaryRegion
	}
	if !IsNil(o.PrimaryZone) {
		toSerialize["primaryZone"] = o.PrimaryZone
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.Mem) {
		toSerialize["mem"] = o.Mem
	}
	if !IsNil(o.UnitCpu) {
		toSerialize["unitCpu"] = o.UnitCpu
	}
	if !IsNil(o.UnitMem) {
		toSerialize["unitMem"] = o.UnitMem
	}
	if !IsNil(o.UnitNum) {
		toSerialize["unitNum"] = o.UnitNum
	}
	if !IsNil(o.VpcId) {
		toSerialize["vpcId"] = o.VpcId
	}
	if !IsNil(o.DeployType) {
		toSerialize["deployType"] = o.DeployType
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.TenantConnections) {
		toSerialize["tenantConnections"] = o.TenantConnections
	}
	if !IsNil(o.TenantZones) {
		toSerialize["tenantZones"] = o.TenantZones
	}
	if !IsNil(o.TenantResource) {
		toSerialize["tenantResource"] = o.TenantResource
	}
	if !IsNil(o.EnableBinlogService) {
		toSerialize["enableBinlogService"] = o.EnableBinlogService
	}
	if !IsNil(o.ReadonlyConnectionAddable) {
		toSerialize["readonlyConnectionAddable"] = o.ReadonlyConnectionAddable
	}
	if !IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if !IsNil(o.Charset) {
		toSerialize["charset"] = o.Charset
	}
	if !IsNil(o.LowerCaseTableNamesParam) {
		toSerialize["lowerCaseTableNamesParam"] = o.LowerCaseTableNamesParam
	}
	if !IsNil(o.TagList) {
		toSerialize["tagList"] = o.TagList
	}
	if !IsNil(o.TenantCompatibilityMode) {
		toSerialize["tenantCompatibilityMode"] = o.TenantCompatibilityMode
	}
	if !IsNil(o.DataMergeTime) {
		toSerialize["dataMergeTime"] = o.DataMergeTime
	}
	if !IsNil(o.EnableProxyPublicLink) {
		toSerialize["enableProxyPublicLink"] = o.EnableProxyPublicLink
	}
	return toSerialize, nil
}

type NullableTenantDTO struct {
	value *TenantDTO
	isSet bool
}

func (v NullableTenantDTO) Get() *TenantDTO {
	return v.value
}

func (v *NullableTenantDTO) Set(val *TenantDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantDTO(val *TenantDTO) *NullableTenantDTO {
	return &NullableTenantDTO{value: val, isSet: true}
}

func (v NullableTenantDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


