/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the TenantMemoryDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantMemoryDTO{}

// TenantMemoryDTO struct for TenantMemoryDTO
type TenantMemoryDTO struct {
	TotalMemory *float64 `json:"totalMemory,omitempty"`
	UsedMemory *float64 `json:"usedMemory,omitempty"`
	UnitMemory *float64 `json:"unitMemory,omitempty"`
}

// NewTenantMemoryDTO instantiates a new TenantMemoryDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantMemoryDTO() *TenantMemoryDTO {
	this := TenantMemoryDTO{}
	return &this
}

// NewTenantMemoryDTOWithDefaults instantiates a new TenantMemoryDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantMemoryDTOWithDefaults() *TenantMemoryDTO {
	this := TenantMemoryDTO{}
	return &this
}

// GetTotalMemory returns the TotalMemory field value if set, zero value otherwise.
func (o *TenantMemoryDTO) GetTotalMemory() float64 {
	if o == nil || IsNil(o.TotalMemory) {
		var ret float64
		return ret
	}
	return *o.TotalMemory
}

// GetTotalMemoryOk returns a tuple with the TotalMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantMemoryDTO) GetTotalMemoryOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalMemory) {
		return nil, false
	}
	return o.TotalMemory, true
}

// HasTotalMemory returns a boolean if a field has been set.
func (o *TenantMemoryDTO) HasTotalMemory() bool {
	if o != nil && !IsNil(o.TotalMemory) {
		return true
	}

	return false
}

// SetTotalMemory gets a reference to the given float64 and assigns it to the TotalMemory field.
func (o *TenantMemoryDTO) SetTotalMemory(v float64) {
	o.TotalMemory = &v
}

// GetUsedMemory returns the UsedMemory field value if set, zero value otherwise.
func (o *TenantMemoryDTO) GetUsedMemory() float64 {
	if o == nil || IsNil(o.UsedMemory) {
		var ret float64
		return ret
	}
	return *o.UsedMemory
}

// GetUsedMemoryOk returns a tuple with the UsedMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantMemoryDTO) GetUsedMemoryOk() (*float64, bool) {
	if o == nil || IsNil(o.UsedMemory) {
		return nil, false
	}
	return o.UsedMemory, true
}

// HasUsedMemory returns a boolean if a field has been set.
func (o *TenantMemoryDTO) HasUsedMemory() bool {
	if o != nil && !IsNil(o.UsedMemory) {
		return true
	}

	return false
}

// SetUsedMemory gets a reference to the given float64 and assigns it to the UsedMemory field.
func (o *TenantMemoryDTO) SetUsedMemory(v float64) {
	o.UsedMemory = &v
}

// GetUnitMemory returns the UnitMemory field value if set, zero value otherwise.
func (o *TenantMemoryDTO) GetUnitMemory() float64 {
	if o == nil || IsNil(o.UnitMemory) {
		var ret float64
		return ret
	}
	return *o.UnitMemory
}

// GetUnitMemoryOk returns a tuple with the UnitMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantMemoryDTO) GetUnitMemoryOk() (*float64, bool) {
	if o == nil || IsNil(o.UnitMemory) {
		return nil, false
	}
	return o.UnitMemory, true
}

// HasUnitMemory returns a boolean if a field has been set.
func (o *TenantMemoryDTO) HasUnitMemory() bool {
	if o != nil && !IsNil(o.UnitMemory) {
		return true
	}

	return false
}

// SetUnitMemory gets a reference to the given float64 and assigns it to the UnitMemory field.
func (o *TenantMemoryDTO) SetUnitMemory(v float64) {
	o.UnitMemory = &v
}

func (o TenantMemoryDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantMemoryDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalMemory) {
		toSerialize["totalMemory"] = o.TotalMemory
	}
	if !IsNil(o.UsedMemory) {
		toSerialize["usedMemory"] = o.UsedMemory
	}
	if !IsNil(o.UnitMemory) {
		toSerialize["unitMemory"] = o.UnitMemory
	}
	return toSerialize, nil
}

type NullableTenantMemoryDTO struct {
	value *TenantMemoryDTO
	isSet bool
}

func (v NullableTenantMemoryDTO) Get() *TenantMemoryDTO {
	return v.value
}

func (v *NullableTenantMemoryDTO) Set(val *TenantMemoryDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantMemoryDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantMemoryDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantMemoryDTO(val *TenantMemoryDTO) *NullableTenantMemoryDTO {
	return &NullableTenantMemoryDTO{value: val, isSet: true}
}

func (v NullableTenantMemoryDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantMemoryDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


