/*
OceanBase Cloud API

API Documentation for OceanBase Cloud

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package obcloudsdk

import (
	"encoding/json"
)

// checks if the CreateReadonlyConnectionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateReadonlyConnectionResponse{}

// CreateReadonlyConnectionResponse struct for CreateReadonlyConnectionResponse
type CreateReadonlyConnectionResponse struct {
	AddressId *string `json:"addressId,omitempty"`
}

// NewCreateReadonlyConnectionResponse instantiates a new CreateReadonlyConnectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateReadonlyConnectionResponse() *CreateReadonlyConnectionResponse {
	this := CreateReadonlyConnectionResponse{}
	return &this
}

// NewCreateReadonlyConnectionResponseWithDefaults instantiates a new CreateReadonlyConnectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateReadonlyConnectionResponseWithDefaults() *CreateReadonlyConnectionResponse {
	this := CreateReadonlyConnectionResponse{}
	return &this
}

// GetAddressId returns the AddressId field value if set, zero value otherwise.
func (o *CreateReadonlyConnectionResponse) GetAddressId() string {
	if o == nil || IsNil(o.AddressId) {
		var ret string
		return ret
	}
	return *o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReadonlyConnectionResponse) GetAddressIdOk() (*string, bool) {
	if o == nil || IsNil(o.AddressId) {
		return nil, false
	}
	return o.AddressId, true
}

// HasAddressId returns a boolean if a field has been set.
func (o *CreateReadonlyConnectionResponse) HasAddressId() bool {
	if o != nil && !IsNil(o.AddressId) {
		return true
	}

	return false
}

// SetAddressId gets a reference to the given string and assigns it to the AddressId field.
func (o *CreateReadonlyConnectionResponse) SetAddressId(v string) {
	o.AddressId = &v
}

func (o CreateReadonlyConnectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateReadonlyConnectionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddressId) {
		toSerialize["addressId"] = o.AddressId
	}
	return toSerialize, nil
}

type NullableCreateReadonlyConnectionResponse struct {
	value *CreateReadonlyConnectionResponse
	isSet bool
}

func (v NullableCreateReadonlyConnectionResponse) Get() *CreateReadonlyConnectionResponse {
	return v.value
}

func (v *NullableCreateReadonlyConnectionResponse) Set(val *CreateReadonlyConnectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateReadonlyConnectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateReadonlyConnectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateReadonlyConnectionResponse(val *CreateReadonlyConnectionResponse) *NullableCreateReadonlyConnectionResponse {
	return &NullableCreateReadonlyConnectionResponse{value: val, isSet: true}
}

func (v NullableCreateReadonlyConnectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateReadonlyConnectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


